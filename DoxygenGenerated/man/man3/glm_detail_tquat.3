.TH "glm::detail::tquat< T, P >" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm::detail::tquat< T, P >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBctor\fP { \fBnull\fP }"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fBtvec4\fP< bool, P > \fBbool_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR length_t \fBlength\fP () const"
.br
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_DECL \fBtquat\fP (\fBtquat\fP< U, Q > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (T const &s, \fBtvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (T const &w, T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (\fBdetail::tvec3\fP< T, P > const &u, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (\fBtvec3\fP< T, P > const &\fBeulerAngles\fP)"
.br
.RI "Build a quaternion from euler angles (pitch, yaw, roll), in radians\&. "
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (\fBtmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP (\fBtmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "GLM_FUNC_DECL T & \fBoperator[]\fP (length_t i)"
.br
.ti -1c
.RI "GLM_FUNC_DECL T const  & \fBoperator[]\fP (length_t i) const"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP< T, P > & \fBoperator+=\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP< T, P > & \fBoperator*=\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP< T, P > & \fBoperator*=\fP (T const &s)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtquat\fP< T, P > & \fBoperator/=\fP (T const &s)"
.br
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_QUALIFIER \fBtquat\fP (\fBtquat\fP< U, Q > const &q)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "T \fBx\fP"
.br
.ti -1c
.RI "T \fBy\fP"
.br
.ti -1c
.RI "T \fBz\fP"
.br
.ti -1c
.RI "T \fBw\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::detail::tquat\fP< T, P >::\fBtquat\fP (\fBdetail::tvec3\fP< T, P > const & u, \fBdetail::tvec3\fP< T, P > const & v)\fC [explicit]\fP"
Create a quaternion from two normalized axis
.PP
\fBParameters:\fP
.RS 4
\fIu\fP A first normalized axis 
.br
\fIv\fP A second normalized axis 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.PP
http://lolengine.net/blog/2013/09/18/beautiful-maths-quaternion-from-vectors 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
