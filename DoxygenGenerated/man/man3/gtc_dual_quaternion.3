.TH "gtc_dual_quaternion" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtc_dual_quaternion \- Defines a templated dual-quaternion type and several dual-quaternion operations\&.  

.SH SYNOPSIS
.br
.PP
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, lowp > \fBglm::lowp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, mediump > \fBglm::mediump_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, highp > \fBglm::highp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, lowp > \fBglm::lowp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, mediump > \fBglm::mediump_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, highp > \fBglm::highp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, lowp > \fBglm::lowp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, mediump > \fBglm::mediump_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, highp > \fBglm::highp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBglm::dualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBglm::fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ddualquat\fP \fBglm::ddualquat\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBglm::normalize\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBglm::lerp\fP (\fBdetail::tdualquat\fP< T, P > const &x, \fBdetail::tdualquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBglm::inverse\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x4\fP< T, P > \fBglm::mat2x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x4\fP< T, P > \fBglm::mat3x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBglm::dualquat_cast\fP (\fBdetail::tmat2x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBglm::dualquat_cast\fP (\fBdetail::tmat3x4\fP< T, P > const &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines a templated dual-quaternion type and several dual-quaternion operations\&. 

<\fBglm/gtx/dual_quaternion\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBhighp_ddualquat\fP \fBglm::ddualquat\fP"
Dual-quaternion of default double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_fdualquat\fP \fBglm::dualquat\fP"
Dual-quaternion of floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_fdualquat\fP \fBglm::fdualquat\fP"
Dual-quaternion of single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<double, highp> \fBglm::highp_ddualquat\fP"
Dual-quaternion of high double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, highp> \fBglm::highp_dualquat\fP"
Dual-quaternion of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, highp> \fBglm::highp_fdualquat\fP"
Dual-quaternion of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<double, lowp> \fBglm::lowp_ddualquat\fP"
Dual-quaternion of low double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, lowp> \fBglm::lowp_dualquat\fP"
Dual-quaternion of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, lowp> \fBglm::lowp_fdualquat\fP"
Dual-quaternion of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<double, mediump> \fBglm::mediump_ddualquat\fP"
Dual-quaternion of medium double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, mediump> \fBglm::mediump_dualquat\fP"
Dual-quaternion of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "typedef \fBdetail::tdualquat\fP<float, mediump> \fBglm::mediump_fdualquat\fP"
Dual-quaternion of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP<T, P> glm::dualquat_cast (\fBdetail::tmat2x4\fP< T, P > const & x)"
Converts a 2 * 4 matrix (matrix which holds real and dual parts) to a quaternion\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP<T, P> glm::dualquat_cast (\fBdetail::tmat3x4\fP< T, P > const & x)"
Converts a 3 * 4 matrix (augmented matrix rotation + translation) to a quaternion\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP<T, P> glm::inverse (\fBdetail::tdualquat\fP< T, P > const & q)"
Returns the q inverse\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP<T, P> glm::lerp (\fBdetail::tdualquat\fP< T, P > const & x, \fBdetail::tdualquat\fP< T, P > const & y, T const & a)"
Returns the linear interpolation of two dual quaternion\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x4\fP<T, P> glm::mat2x4_cast (\fBdetail::tdualquat\fP< T, P > const & x)"
Converts a quaternion to a 2 * 4 matrix\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x4\fP<T, P> glm::mat3x4_cast (\fBdetail::tdualquat\fP< T, P > const & x)"
Converts a quaternion to a 3 * 4 matrix\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP<T, P> glm::normalize (\fBdetail::tdualquat\fP< T, P > const & q)"
Returns the normalized quaternion\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_dual_quaternion\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
