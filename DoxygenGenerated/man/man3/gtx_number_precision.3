.TH "gtx_number_precision" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_number_precision \- Defined size types\&.  

.SH SYNOPSIS
.br
.PP
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBu8\fP \fBglm::gtx::u8vec1\fP"
.br
.RI "8bit unsigned integer scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBu16\fP \fBglm::gtx::u16vec1\fP"
.br
.RI "16bit unsigned integer scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBu32\fP \fBglm::gtx::u32vec1\fP"
.br
.RI "32bit unsigned integer scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBu64\fP \fBglm::gtx::u64vec1\fP"
.br
.RI "64bit unsigned integer scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf32\fP \fBglm::gtx::f32vec1\fP"
.br
.RI "Single-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf64\fP \fBglm::gtx::f64vec1\fP"
.br
.RI "Single-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf32\fP \fBglm::gtx::f32mat1\fP"
.br
.RI "Single-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf32\fP \fBglm::gtx::f32mat1x1\fP"
.br
.RI "Single-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf64\fP \fBglm::gtx::f64mat1\fP"
.br
.RI "Double-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.ti -1c
.RI "typedef \fBf64\fP \fBglm::gtx::f64mat1x1\fP"
.br
.RI "Double-precision floating-point scalar\&. (from GLM_GTX_number_precision extension) "
.in -1c
.SH "Detailed Description"
.PP 
Defined size types\&. 

<\fBglm/gtx/number_precision\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
