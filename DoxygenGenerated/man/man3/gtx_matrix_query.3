.TH "gtx_matrix_query" 3 "Fri Dec 14 2018" "IMAC3_CG_CPP_Game_Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_matrix_query \- Query to evaluate matrix properties\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNull\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNull\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNull\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBglm::isIdentity\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNormalized\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNormalized\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBglm::isNormalized\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBglm::isOrthogonal\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Query to evaluate matrix properties\&. 

<\fBglm/gtx/matrix_query\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool glm::isIdentity (matType< T, P > const & m, T const & epsilon)"
Return whether a matrix is an identity matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNormalized (\fBdetail::tmat2x2\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix is a normalized matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNormalized (\fBdetail::tmat3x3\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix is a normalized matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNormalized (\fBdetail::tmat4x4\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix is a normalized matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNull (\fBdetail::tmat2x2\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix a null matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNull (\fBdetail::tmat3x3\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix a null matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL bool glm::isNull (\fBdetail::tmat4x4\fP< T, P > const & m, T const & epsilon)"
Return whether a matrix is a null matrix\&. From GLM_GTX_matrix_query extension\&. 
.SS "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool glm::isOrthogonal (matType< T, P > const & m, T const & epsilon)"
Return whether a matrix is an orthonormalized matrix\&. From GLM_GTX_matrix_query extension\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC3_CG_CPP_Game_Project from the source code\&.
