.TH "glm" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBdont_care\fP"
.br
.ti -1c
.RI "class \fBfastest\fP"
.br
.ti -1c
.RI "class \fBnicest\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int \fBlength_t\fP"
.br
.ti -1c
.RI "typedef float \fBlowp_float_t\fP"
.br
.ti -1c
.RI "typedef float \fBmediump_float_t\fP"
.br
.ti -1c
.RI "typedef double \fBhighp_float_t\fP"
.br
.ti -1c
.RI "typedef lowp_float_t \fBlowp_float\fP"
.br
.ti -1c
.RI "typedef mediump_float_t \fBmediump_float\fP"
.br
.ti -1c
.RI "typedef highp_float_t \fBhighp_float\fP"
.br
.ti -1c
.RI "typedef \fBmediump_float\fP \fBfloat_t\fP"
.br
.ti -1c
.RI "typedef float \fBfloat32\fP"
.br
.ti -1c
.RI "typedef double \fBfloat64\fP"
.br
.ti -1c
.RI "typedef std::size_t \fBsizeType\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBint8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBint16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBint32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBint64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBuint8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBuint16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBuint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBuint64\fP"
.br
.ti -1c
.RI "typedef detail::lowp_int_t \fBlowp_int\fP"
.br
.ti -1c
.RI "typedef detail::mediump_int_t \fBmediump_int\fP"
.br
.ti -1c
.RI "typedef detail::highp_int_t \fBhighp_int\fP"
.br
.ti -1c
.RI "typedef detail::lowp_uint_t \fBlowp_uint\fP"
.br
.ti -1c
.RI "typedef detail::mediump_uint_t \fBmediump_uint\fP"
.br
.ti -1c
.RI "typedef detail::highp_uint_t \fBhighp_uint\fP"
.br
.ti -1c
.RI "typedef \fBmediump_int\fP \fBint_t\fP"
.br
.ti -1c
.RI "typedef \fBmediump_uint\fP \fBuint_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBuint\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, lowp > \fBlowp_mat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, mediump > \fBmediump_mat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, highp > \fBhighp_mat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, lowp > \fBlowp_mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, mediump > \fBmediump_mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, highp > \fBhighp_mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< float, lowp > \fBlowp_mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< float, mediump > \fBmediump_mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< float, highp > \fBhighp_mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< float, lowp > \fBlowp_mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< float, mediump > \fBmediump_mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< float, highp > \fBhighp_mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< float, lowp > \fBlowp_mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< float, mediump > \fBmediump_mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< float, highp > \fBhighp_mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, lowp > \fBlowp_mat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, mediump > \fBmediump_mat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, highp > \fBhighp_mat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, lowp > \fBlowp_mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, mediump > \fBmediump_mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, highp > \fBhighp_mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< float, lowp > \fBlowp_mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< float, mediump > \fBmediump_mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< float, highp > \fBhighp_mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< float, lowp > \fBlowp_mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< float, mediump > \fBmediump_mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< float, highp > \fBhighp_mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< float, lowp > \fBlowp_mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< float, mediump > \fBmediump_mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< float, highp > \fBhighp_mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, lowp > \fBlowp_mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, mediump > \fBmediump_mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, highp > \fBhighp_mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, lowp > \fBlowp_mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, mediump > \fBmediump_mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, highp > \fBhighp_mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat2x2\fP \fBmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat2x3\fP \fBmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat2x4\fP \fBmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat3x2\fP \fBmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat3x3\fP \fBmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat3x4\fP \fBmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat4x2\fP \fBmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat4x3\fP \fBmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_mat4x4\fP \fBmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmat2x2\fP \fBmat2\fP"
.br
.ti -1c
.RI "typedef \fBmat3x3\fP \fBmat3\fP"
.br
.ti -1c
.RI "typedef \fBmat4x4\fP \fBmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, lowp > \fBlowp_dmat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, mediump > \fBmediump_dmat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, highp > \fBhighp_dmat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, lowp > \fBlowp_dmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, mediump > \fBmediump_dmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, highp > \fBhighp_dmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< double, lowp > \fBlowp_dmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< double, mediump > \fBmediump_dmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< double, highp > \fBhighp_dmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< double, lowp > \fBlowp_dmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< double, mediump > \fBmediump_dmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< double, highp > \fBhighp_dmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< double, lowp > \fBlowp_dmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< double, mediump > \fBmediump_dmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< double, highp > \fBhighp_dmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, lowp > \fBlowp_dmat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, mediump > \fBmediump_dmat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, highp > \fBhighp_dmat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, lowp > \fBlowp_dmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, mediump > \fBmediump_dmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, highp > \fBhighp_dmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< double, lowp > \fBlowp_dmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< double, mediump > \fBmediump_dmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< double, highp > \fBhighp_dmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< double, lowp > \fBlowp_dmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< double, mediump > \fBmediump_dmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< double, highp > \fBhighp_dmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< double, lowp > \fBlowp_dmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< double, mediump > \fBmediump_dmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< double, highp > \fBhighp_dmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, lowp > \fBlowp_dmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, mediump > \fBmediump_dmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, highp > \fBhighp_dmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, lowp > \fBlowp_dmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, mediump > \fBmediump_dmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, highp > \fBhighp_dmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat2x2\fP \fBdmat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat3x3\fP \fBdmat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat4x4\fP \fBdmat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat2x2\fP \fBdmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat2x3\fP \fBdmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat2x4\fP \fBdmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat3x2\fP \fBdmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat3x3\fP \fBdmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat3x4\fP \fBdmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat4x2\fP \fBdmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat4x3\fP \fBdmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dmat4x4\fP \fBdmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, highp > \fBhighp_vec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, mediump > \fBmediump_vec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, lowp > \fBlowp_vec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< int, highp > \fBhighp_ivec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< int, mediump > \fBmediump_ivec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< int, lowp > \fBlowp_ivec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBuint\fP, highp > \fBhighp_uvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBuint\fP, mediump > \fBmediump_uvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBuint\fP, lowp > \fBlowp_uvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< bool, highp > \fBhighp_bvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< bool, mediump > \fBmediump_bvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< bool, lowp > \fBlowp_bvec1_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, highp > \fBhighp_vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, mediump > \fBmediump_vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, lowp > \fBlowp_vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< double, highp > \fBhighp_dvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< double, mediump > \fBmediump_dvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< double, lowp > \fBlowp_dvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< int, highp > \fBhighp_ivec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< int, mediump > \fBmediump_ivec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< int, lowp > \fBlowp_ivec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBuint\fP, highp > \fBhighp_uvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBuint\fP, mediump > \fBmediump_uvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBuint\fP, lowp > \fBlowp_uvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< bool, highp > \fBhighp_bvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< bool, mediump > \fBmediump_bvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< bool, lowp > \fBlowp_bvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, highp > \fBhighp_vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, mediump > \fBmediump_vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, lowp > \fBlowp_vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< double, highp > \fBhighp_dvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< double, mediump > \fBmediump_dvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< double, lowp > \fBlowp_dvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< int, highp > \fBhighp_ivec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< int, mediump > \fBmediump_ivec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< int, lowp > \fBlowp_ivec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBuint\fP, highp > \fBhighp_uvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBuint\fP, mediump > \fBmediump_uvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBuint\fP, lowp > \fBlowp_uvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< bool, highp > \fBhighp_bvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< bool, mediump > \fBmediump_bvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< bool, lowp > \fBlowp_bvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, highp > \fBhighp_vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, mediump > \fBmediump_vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, lowp > \fBlowp_vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< double, highp > \fBhighp_dvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< double, mediump > \fBmediump_dvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< double, lowp > \fBlowp_dvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< int, highp > \fBhighp_ivec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< int, mediump > \fBmediump_ivec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< int, lowp > \fBlowp_ivec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBuint\fP, highp > \fBhighp_uvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBuint\fP, mediump > \fBmediump_uvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBuint\fP, lowp > \fBlowp_uvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< bool, highp > \fBhighp_bvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< bool, mediump > \fBmediump_bvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< bool, lowp > \fBlowp_bvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_vec2\fP \fBvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_vec3\fP \fBvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_vec4\fP \fBvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dvec2\fP \fBdvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dvec3\fP \fBdvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dvec4\fP \fBdvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec2\fP \fBivec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec3\fP \fBivec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec4\fP \fBivec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec2\fP \fBuvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec3\fP \fBuvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec4\fP \fBuvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec2\fP \fBbvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec3\fP \fBbvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec4\fP \fBbvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< float, lowp > \fBlowp_quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< float, mediump > \fBmediump_quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< float, highp > \fBhighp_quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_quat\fP \fBquat\fP"
.br
.RI "Quaternion of default single-precision floating-point numbers\&. "
.ti -1c
.RI "typedef \fBlowp_quat\fP \fBlowp_fquat\fP"
.br
.ti -1c
.RI "typedef \fBmediump_quat\fP \fBmediump_fquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_quat\fP \fBhighp_fquat\fP"
.br
.ti -1c
.RI "typedef \fBquat\fP \fBfquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< double, lowp > \fBlowp_dquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< double, mediump > \fBmediump_dquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< double, highp > \fBhighp_dquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dquat\fP \fBdquat\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_int8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBlowp_int16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBlowp_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_int8_t\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBlowp_int16_t\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBlowp_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_i8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBlowp_i16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBlowp_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_int8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBmediump_int16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBmediump_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_int8_t\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBmediump_int16_t\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBmediump_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_i8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBmediump_i16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBmediump_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_int8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBhighp_int16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBhighp_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_int8_t\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBhighp_int16_t\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBhighp_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_i8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBhighp_i16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBhighp_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBint8_t\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBint16_t\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBint32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBint64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBi8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBi16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBi32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBi64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi8\fP, lowp > \fBlowp_i8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi8\fP, lowp > \fBlowp_i8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi8\fP, lowp > \fBlowp_i8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi8\fP, lowp > \fBlowp_i8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi8\fP, mediump > \fBmediump_i8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi8\fP, mediump > \fBmediump_i8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi8\fP, mediump > \fBmediump_i8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi8\fP, mediump > \fBmediump_i8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi8\fP, highp > \fBhighp_i8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi8\fP, highp > \fBhighp_i8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi8\fP, highp > \fBhighp_i8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi8\fP, highp > \fBhighp_i8vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec1\fP \fBi8vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec2\fP \fBi8vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec3\fP \fBi8vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec4\fP \fBi8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi16\fP, lowp > \fBlowp_i16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi16\fP, lowp > \fBlowp_i16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi16\fP, lowp > \fBlowp_i16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi16\fP, lowp > \fBlowp_i16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi16\fP, mediump > \fBmediump_i16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi16\fP, mediump > \fBmediump_i16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi16\fP, mediump > \fBmediump_i16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi16\fP, mediump > \fBmediump_i16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi16\fP, highp > \fBhighp_i16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi16\fP, highp > \fBhighp_i16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi16\fP, highp > \fBhighp_i16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi16\fP, highp > \fBhighp_i16vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec1\fP \fBi16vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec2\fP \fBi16vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec3\fP \fBi16vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec4\fP \fBi16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi32\fP, lowp > \fBlowp_i32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi32\fP, lowp > \fBlowp_i32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi32\fP, lowp > \fBlowp_i32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi32\fP, lowp > \fBlowp_i32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi32\fP, mediump > \fBmediump_i32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi32\fP, mediump > \fBmediump_i32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi32\fP, mediump > \fBmediump_i32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi32\fP, mediump > \fBmediump_i32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi32\fP, highp > \fBhighp_i32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi32\fP, highp > \fBhighp_i32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi32\fP, highp > \fBhighp_i32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi32\fP, highp > \fBhighp_i32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec1\fP \fBi32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec2\fP \fBi32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec3\fP \fBi32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec4\fP \fBi32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi64\fP, lowp > \fBlowp_i64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi64\fP, lowp > \fBlowp_i64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi64\fP, lowp > \fBlowp_i64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi64\fP, lowp > \fBlowp_i64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi64\fP, mediump > \fBmediump_i64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi64\fP, mediump > \fBmediump_i64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi64\fP, mediump > \fBmediump_i64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi64\fP, mediump > \fBmediump_i64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBi64\fP, highp > \fBhighp_i64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBi64\fP, highp > \fBhighp_i64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBi64\fP, highp > \fBhighp_i64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBi64\fP, highp > \fBhighp_i64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec1\fP \fBi64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec2\fP \fBi64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec3\fP \fBi64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec4\fP \fBi64vec4\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBlowp_uint8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBlowp_uint16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBlowp_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_uint64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBlowp_uint8_t\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBlowp_uint16_t\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBlowp_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_uint64_t\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBlowp_u8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBlowp_u16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBlowp_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_u64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBmediump_uint8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBmediump_uint16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBmediump_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_uint64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBmediump_uint8_t\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBmediump_uint16_t\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBmediump_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_uint64_t\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBmediump_u8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBmediump_u16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBmediump_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_u64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBhighp_uint8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBhighp_uint16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBhighp_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_uint64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBhighp_uint8_t\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBhighp_uint16_t\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBhighp_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_uint64_t\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBhighp_u8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBhighp_u16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBhighp_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_u64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBuint8_t\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBuint16_t\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBuint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBuint64_t\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBu8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBu16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBu32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBu64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu8\fP, lowp > \fBlowp_u8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu8\fP, lowp > \fBlowp_u8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu8\fP, lowp > \fBlowp_u8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu8\fP, lowp > \fBlowp_u8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu8\fP, mediump > \fBmediump_u8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu8\fP, mediump > \fBmediump_u8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu8\fP, mediump > \fBmediump_u8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu8\fP, mediump > \fBmediump_u8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu8\fP, highp > \fBhighp_u8vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu8\fP, highp > \fBhighp_u8vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu8\fP, highp > \fBhighp_u8vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu8\fP, highp > \fBhighp_u8vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec1\fP \fBu8vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec2\fP \fBu8vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec3\fP \fBu8vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec4\fP \fBu8vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu16\fP, lowp > \fBlowp_u16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu16\fP, lowp > \fBlowp_u16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu16\fP, lowp > \fBlowp_u16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu16\fP, lowp > \fBlowp_u16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu16\fP, mediump > \fBmediump_u16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu16\fP, mediump > \fBmediump_u16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu16\fP, mediump > \fBmediump_u16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu16\fP, mediump > \fBmediump_u16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu16\fP, highp > \fBhighp_u16vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu16\fP, highp > \fBhighp_u16vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu16\fP, highp > \fBhighp_u16vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu16\fP, highp > \fBhighp_u16vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec1\fP \fBu16vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec2\fP \fBu16vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec3\fP \fBu16vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec4\fP \fBu16vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu32\fP, lowp > \fBlowp_u32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu32\fP, lowp > \fBlowp_u32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu32\fP, lowp > \fBlowp_u32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu32\fP, lowp > \fBlowp_u32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu32\fP, mediump > \fBmediump_u32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu32\fP, mediump > \fBmediump_u32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu32\fP, mediump > \fBmediump_u32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu32\fP, mediump > \fBmediump_u32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu32\fP, highp > \fBhighp_u32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu32\fP, highp > \fBhighp_u32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu32\fP, highp > \fBhighp_u32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu32\fP, highp > \fBhighp_u32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec1\fP \fBu32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec2\fP \fBu32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec3\fP \fBu32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec4\fP \fBu32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu64\fP, lowp > \fBlowp_u64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu64\fP, lowp > \fBlowp_u64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu64\fP, lowp > \fBlowp_u64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu64\fP, lowp > \fBlowp_u64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu64\fP, mediump > \fBmediump_u64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu64\fP, mediump > \fBmediump_u64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu64\fP, mediump > \fBmediump_u64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu64\fP, mediump > \fBmediump_u64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBu64\fP, highp > \fBhighp_u64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBu64\fP, highp > \fBhighp_u64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBu64\fP, highp > \fBhighp_u64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBu64\fP, highp > \fBhighp_u64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec1\fP \fBu64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec2\fP \fBu64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec3\fP \fBu64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec4\fP \fBu64vec4\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBlowp_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBlowp_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBlowp_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBlowp_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBlowp_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBlowp_f64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBmediump_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBmediump_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBmediump_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBmediump_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBmediump_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBmediump_f64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBhighp_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBhighp_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBhighp_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBhighp_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBhighp_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBhighp_f64\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float32_t\fP \fBfloat32_t\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float64_t\fP \fBfloat64_t\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float32_t\fP \fBf32\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float64_t\fP \fBf64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, lowp > \fBlowp_vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, lowp > \fBlowp_fvec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, lowp > \fBlowp_fvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, lowp > \fBlowp_fvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, lowp > \fBlowp_fvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, mediump > \fBmediump_vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, mediump > \fBmediump_fvec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, mediump > \fBmediump_fvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, mediump > \fBmediump_fvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, mediump > \fBmediump_fvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, highp > \fBhighp_vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< float, highp > \fBhighp_fvec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, highp > \fBhighp_fvec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, highp > \fBhighp_fvec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, highp > \fBhighp_fvec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf32\fP, lowp > \fBlowp_f32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf32\fP, lowp > \fBlowp_f32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf32\fP, lowp > \fBlowp_f32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf32\fP, lowp > \fBlowp_f32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf32\fP, mediump > \fBmediump_f32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf32\fP, mediump > \fBmediump_f32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf32\fP, mediump > \fBmediump_f32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf32\fP, mediump > \fBmediump_f32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf32\fP, highp > \fBhighp_f32vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf32\fP, highp > \fBhighp_f32vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf32\fP, highp > \fBhighp_f32vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf32\fP, highp > \fBhighp_f32vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf64\fP, lowp > \fBlowp_f64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf64\fP, lowp > \fBlowp_f64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf64\fP, lowp > \fBlowp_f64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf64\fP, lowp > \fBlowp_f64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf64\fP, mediump > \fBmediump_f64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf64\fP, mediump > \fBmediump_f64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf64\fP, mediump > \fBmediump_f64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf64\fP, mediump > \fBmediump_f64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec1\fP< \fBf64\fP, highp > \fBhighp_f64vec1\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< \fBf64\fP, highp > \fBhighp_f64vec2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< \fBf64\fP, highp > \fBhighp_f64vec3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< \fBf64\fP, highp > \fBhighp_f64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, lowp > \fBlowp_fmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, lowp > \fBlowp_fmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, lowp > \fBlowp_fmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, lowp > \fBlowp_fmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, lowp > \fBlowp_fmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, lowp > \fBlowp_fmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, lowp > \fBlowp_fmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, lowp > \fBlowp_fmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, lowp > \fBlowp_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat2x2\fP \fBlowp_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat3x3\fP \fBlowp_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat4x4\fP \fBlowp_fmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, mediump > \fBmediump_fmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, mediump > \fBmediump_fmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, mediump > \fBmediump_fmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, mediump > \fBmediump_fmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, mediump > \fBmediump_fmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, mediump > \fBmediump_fmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, mediump > \fBmediump_fmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, mediump > \fBmediump_fmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, mediump > \fBmediump_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat2x2\fP \fBmediump_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat3x3\fP \fBmediump_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat4x4\fP \fBmediump_fmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, highp > \fBhighp_fmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, highp > \fBhighp_fmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, highp > \fBhighp_fmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, highp > \fBhighp_fmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, highp > \fBhighp_fmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, highp > \fBhighp_fmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, highp > \fBhighp_fmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, highp > \fBhighp_fmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, highp > \fBhighp_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat2x2\fP \fBhighp_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat3x3\fP \fBhighp_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat4x4\fP \fBhighp_fmat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, lowp > \fBlowp_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, lowp > \fBlowp_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, lowp > \fBlowp_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, lowp > \fBlowp_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, lowp > \fBlowp_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, lowp > \fBlowp_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, lowp > \fBlowp_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, lowp > \fBlowp_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, lowp > \fBlowp_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat2x2\fP \fBlowp_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat3x3\fP \fBlowp_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat4x4\fP \fBlowp_f32mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, mediump > \fBmediump_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, mediump > \fBmediump_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, mediump > \fBmediump_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, mediump > \fBmediump_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, mediump > \fBmediump_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, mediump > \fBmediump_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, mediump > \fBmediump_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, mediump > \fBmediump_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, mediump > \fBmediump_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat2x2\fP \fBmediump_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat3x3\fP \fBmediump_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat4x4\fP \fBmediump_f32mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf32\fP, highp > \fBhighp_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf32\fP, highp > \fBhighp_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf32\fP, highp > \fBhighp_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf32\fP, highp > \fBhighp_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf32\fP, highp > \fBhighp_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf32\fP, highp > \fBhighp_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf32\fP, highp > \fBhighp_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf32\fP, highp > \fBhighp_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf32\fP, highp > \fBhighp_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBhighp_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBhighp_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBhighp_f32mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf64\fP, lowp > \fBlowp_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf64\fP, lowp > \fBlowp_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf64\fP, lowp > \fBlowp_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf64\fP, lowp > \fBlowp_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf64\fP, lowp > \fBlowp_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf64\fP, lowp > \fBlowp_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf64\fP, lowp > \fBlowp_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf64\fP, lowp > \fBlowp_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf64\fP, lowp > \fBlowp_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat2x2\fP \fBlowp_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat3x3\fP \fBlowp_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat4x4\fP \fBlowp_f64mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf64\fP, mediump > \fBmediump_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf64\fP, mediump > \fBmediump_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf64\fP, mediump > \fBmediump_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf64\fP, mediump > \fBmediump_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf64\fP, mediump > \fBmediump_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf64\fP, mediump > \fBmediump_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf64\fP, mediump > \fBmediump_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf64\fP, mediump > \fBmediump_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf64\fP, mediump > \fBmediump_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat2x2\fP \fBmediump_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat3x3\fP \fBmediump_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat4x4\fP \fBmediump_f64mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBf64\fP, highp > \fBhighp_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBf64\fP, highp > \fBhighp_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBf64\fP, highp > \fBhighp_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBf64\fP, highp > \fBhighp_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBf64\fP, highp > \fBhighp_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBf64\fP, highp > \fBhighp_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBf64\fP, highp > \fBhighp_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBf64\fP, highp > \fBhighp_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBf64\fP, highp > \fBhighp_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x2\fP \fBhighp_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x3\fP \fBhighp_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x4\fP \fBhighp_f64mat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf32\fP, lowp > \fBlowp_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf64\fP, lowp > \fBlowp_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf32\fP, mediump > \fBmediump_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf64\fP, mediump > \fBmediump_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf32\fP, highp > \fBhighp_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tquat\fP< \fBf64\fP, highp > \fBhighp_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec1\fP \fBfvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec2\fP \fBfvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec3\fP \fBfvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec4\fP \fBfvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBfmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x3\fP \fBfmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x4\fP \fBfmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x2\fP \fBfmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBfmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x4\fP \fBfmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x2\fP \fBfmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x3\fP \fBfmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBfmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBfmat2x2\fP \fBfmat2\fP"
.br
.ti -1c
.RI "typedef \fBfmat3x3\fP \fBfmat3\fP"
.br
.ti -1c
.RI "typedef \fBfmat4x4\fP \fBfmat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec1\fP \fBf32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec2\fP \fBf32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec3\fP \fBf32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec4\fP \fBf32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBf32mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x3\fP \fBf32mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x4\fP \fBf32mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x2\fP \fBf32mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBf32mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x4\fP \fBf32mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x2\fP \fBf32mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x3\fP \fBf32mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBf32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBf32mat2x2\fP \fBf32mat2\fP"
.br
.ti -1c
.RI "typedef \fBf32mat3x3\fP \fBf32mat3\fP"
.br
.ti -1c
.RI "typedef \fBf32mat4x4\fP \fBf32mat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32quat\fP \fBf32quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec1\fP \fBf64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec2\fP \fBf64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec3\fP \fBf64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec4\fP \fBf64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x2\fP \fBf64mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x3\fP \fBf64mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x4\fP \fBf64mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x2\fP \fBf64mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x3\fP \fBf64mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x4\fP \fBf64mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x2\fP \fBf64mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x3\fP \fBf64mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x4\fP \fBf64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBf64mat2x2\fP \fBf64mat2\fP"
.br
.ti -1c
.RI "typedef \fBf64mat3x3\fP \fBf64mat3\fP"
.br
.ti -1c
.RI "typedef \fBf64mat4x4\fP \fBf64mat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64quat\fP \fBf64quat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, highp > \fBhighp_imat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, highp > \fBhighp_imat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, highp > \fBhighp_imat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, highp > \fBhighp_imat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< int, highp > \fBhighp_imat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< int, highp > \fBhighp_imat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< int, highp > \fBhighp_imat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, highp > \fBhighp_imat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< int, highp > \fBhighp_imat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< int, highp > \fBhighp_imat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< int, highp > \fBhighp_imat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, highp > \fBhighp_imat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, mediump > \fBmediump_imat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, mediump > \fBmediump_imat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, mediump > \fBmediump_imat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, mediump > \fBmediump_imat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< int, mediump > \fBmediump_imat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< int, mediump > \fBmediump_imat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< int, mediump > \fBmediump_imat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, mediump > \fBmediump_imat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< int, mediump > \fBmediump_imat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< int, mediump > \fBmediump_imat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< int, mediump > \fBmediump_imat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, mediump > \fBmediump_imat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, lowp > \fBlowp_imat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, lowp > \fBlowp_imat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, lowp > \fBlowp_imat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, lowp > \fBlowp_imat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< int, lowp > \fBlowp_imat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< int, lowp > \fBlowp_imat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< int, lowp > \fBlowp_imat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, lowp > \fBlowp_imat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< int, lowp > \fBlowp_imat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< int, lowp > \fBlowp_imat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< int, lowp > \fBlowp_imat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, lowp > \fBlowp_imat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, highp > \fBhighp_umat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, highp > \fBhighp_umat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, highp > \fBhighp_umat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, highp > \fBhighp_umat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBuint\fP, highp > \fBhighp_umat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBuint\fP, highp > \fBhighp_umat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBuint\fP, highp > \fBhighp_umat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, highp > \fBhighp_umat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBuint\fP, highp > \fBhighp_umat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBuint\fP, highp > \fBhighp_umat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBuint\fP, highp > \fBhighp_umat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, highp > \fBhighp_umat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, mediump > \fBmediump_umat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, mediump > \fBmediump_umat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, mediump > \fBmediump_umat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, mediump > \fBmediump_umat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBuint\fP, mediump > \fBmediump_umat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBuint\fP, mediump > \fBmediump_umat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBuint\fP, mediump > \fBmediump_umat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, mediump > \fBmediump_umat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBuint\fP, mediump > \fBmediump_umat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBuint\fP, mediump > \fBmediump_umat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBuint\fP, mediump > \fBmediump_umat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, mediump > \fBmediump_umat4x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, lowp > \fBlowp_umat2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, lowp > \fBlowp_umat3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, lowp > \fBlowp_umat4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< \fBuint\fP, lowp > \fBlowp_umat2x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< \fBuint\fP, lowp > \fBlowp_umat2x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< \fBuint\fP, lowp > \fBlowp_umat2x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< \fBuint\fP, lowp > \fBlowp_umat3x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< \fBuint\fP, lowp > \fBlowp_umat3x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< \fBuint\fP, lowp > \fBlowp_umat3x4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< \fBuint\fP, lowp > \fBlowp_umat4x2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< \fBuint\fP, lowp > \fBlowp_umat4x3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< \fBuint\fP, lowp > \fBlowp_umat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2\fP \fBimat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3\fP \fBimat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4\fP \fBimat4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x2\fP \fBimat2x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x3\fP \fBimat2x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x4\fP \fBimat2x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x2\fP \fBimat3x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x3\fP \fBimat3x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x4\fP \fBimat3x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x2\fP \fBimat4x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x3\fP \fBimat4x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x4\fP \fBimat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2\fP \fBumat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3\fP \fBumat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4\fP \fBumat4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x2\fP \fBumat2x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x3\fP \fBumat2x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x4\fP \fBumat2x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x2\fP \fBumat3x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x3\fP \fBumat3x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x4\fP \fBumat3x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x2\fP \fBumat4x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x3\fP \fBumat4x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x4\fP \fBumat4x4\fP"
.br
.ti -1c
.RI "typedef bool \fBbool1\fP"
.br
.RI "boolean type with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< bool, highp > \fBbool2\fP"
.br
.RI "boolean type with 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< bool, highp > \fBbool3\fP"
.br
.RI "boolean type with 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< bool, highp > \fBbool4\fP"
.br
.RI "boolean type with 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef bool \fBbool1x1\fP"
.br
.RI "boolean matrix with 1 x 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< bool, highp > \fBbool2x2\fP"
.br
.RI "boolean matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< bool, highp > \fBbool2x3\fP"
.br
.RI "boolean matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< bool, highp > \fBbool2x4\fP"
.br
.RI "boolean matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< bool, highp > \fBbool3x2\fP"
.br
.RI "boolean matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< bool, highp > \fBbool3x3\fP"
.br
.RI "boolean matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< bool, highp > \fBbool3x4\fP"
.br
.RI "boolean matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< bool, highp > \fBbool4x2\fP"
.br
.RI "boolean matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< bool, highp > \fBbool4x3\fP"
.br
.RI "boolean matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< bool, highp > \fBbool4x4\fP"
.br
.RI "boolean matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef int \fBint1\fP"
.br
.RI "integer vector with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< int, highp > \fBint2\fP"
.br
.RI "integer vector with 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< int, highp > \fBint3\fP"
.br
.RI "integer vector with 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< int, highp > \fBint4\fP"
.br
.RI "integer vector with 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef int \fBint1x1\fP"
.br
.RI "integer matrix with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< int, highp > \fBint2x2\fP"
.br
.RI "integer matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< int, highp > \fBint2x3\fP"
.br
.RI "integer matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< int, highp > \fBint2x4\fP"
.br
.RI "integer matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< int, highp > \fBint3x2\fP"
.br
.RI "integer matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< int, highp > \fBint3x3\fP"
.br
.RI "integer matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< int, highp > \fBint3x4\fP"
.br
.RI "integer matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< int, highp > \fBint4x2\fP"
.br
.RI "integer matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< int, highp > \fBint4x3\fP"
.br
.RI "integer matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< int, highp > \fBint4x4\fP"
.br
.RI "integer matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef float \fBfloat1\fP"
.br
.RI "single-precision floating-point vector with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< float, highp > \fBfloat2\fP"
.br
.RI "single-precision floating-point vector with 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< float, highp > \fBfloat3\fP"
.br
.RI "single-precision floating-point vector with 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< float, highp > \fBfloat4\fP"
.br
.RI "single-precision floating-point vector with 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef float \fBfloat1x1\fP"
.br
.RI "single-precision floating-point matrix with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< float, highp > \fBfloat2x2\fP"
.br
.RI "single-precision floating-point matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< float, highp > \fBfloat2x3\fP"
.br
.RI "single-precision floating-point matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< float, highp > \fBfloat2x4\fP"
.br
.RI "single-precision floating-point matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< float, highp > \fBfloat3x2\fP"
.br
.RI "single-precision floating-point matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< float, highp > \fBfloat3x3\fP"
.br
.RI "single-precision floating-point matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< float, highp > \fBfloat3x4\fP"
.br
.RI "single-precision floating-point matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< float, highp > \fBfloat4x2\fP"
.br
.RI "single-precision floating-point matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< float, highp > \fBfloat4x3\fP"
.br
.RI "single-precision floating-point matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< float, highp > \fBfloat4x4\fP"
.br
.RI "single-precision floating-point matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef double \fBdouble1\fP"
.br
.RI "double-precision floating-point vector with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< double, highp > \fBdouble2\fP"
.br
.RI "double-precision floating-point vector with 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< double, highp > \fBdouble3\fP"
.br
.RI "double-precision floating-point vector with 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< double, highp > \fBdouble4\fP"
.br
.RI "double-precision floating-point vector with 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef double \fBdouble1x1\fP"
.br
.RI "double-precision floating-point matrix with 1 component\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x2\fP< double, highp > \fBdouble2x2\fP"
.br
.RI "double-precision floating-point matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x3\fP< double, highp > \fBdouble2x3\fP"
.br
.RI "double-precision floating-point matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat2x4\fP< double, highp > \fBdouble2x4\fP"
.br
.RI "double-precision floating-point matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x2\fP< double, highp > \fBdouble3x2\fP"
.br
.RI "double-precision floating-point matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x3\fP< double, highp > \fBdouble3x3\fP"
.br
.RI "double-precision floating-point matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat3x4\fP< double, highp > \fBdouble3x4\fP"
.br
.RI "double-precision floating-point matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x2\fP< double, highp > \fBdouble4x2\fP"
.br
.RI "double-precision floating-point matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x3\fP< double, highp > \fBdouble4x3\fP"
.br
.RI "double-precision floating-point matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tmat4x4\fP< double, highp > \fBdouble4x4\fP"
.br
.RI "double-precision floating-point matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) "
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, lowp > \fBlowp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, mediump > \fBmediump_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, highp > \fBhighp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, lowp > \fBlowp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, mediump > \fBmediump_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< float, highp > \fBhighp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, lowp > \fBlowp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, mediump > \fBmediump_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tdualquat\fP< double, highp > \fBhighp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBdualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBfdualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ddualquat\fP \fBddualquat\fP"
.br
.ti -1c
.RI "typedef signed int \fBsint\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBbyte\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBword\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBdword\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBqword\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< std::size_t, defaultp > \fBsize2\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< std::size_t, defaultp > \fBsize3\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< std::size_t, defaultp > \fBsize4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec2\fP< std::size_t, defaultp > \fBsize2_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec3\fP< std::size_t, defaultp > \fBsize3_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::tvec4\fP< std::size_t, defaultp > \fBsize4_t\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec1_t\fP \fBhighp_ivec1\fP"
.br
.ti -1c
.RI "typedef \fBmediump_ivec1_t\fP \fBmediump_ivec1\fP"
.br
.ti -1c
.RI "typedef \fBlowp_ivec1_t\fP \fBlowp_ivec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec1_t\fP \fBhighp_uvec1\fP"
.br
.ti -1c
.RI "typedef \fBmediump_uvec1_t\fP \fBmediump_uvec1\fP"
.br
.ti -1c
.RI "typedef \fBlowp_uvec1_t\fP \fBlowp_uvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec1_t\fP \fBhighp_bvec1\fP"
.br
.ti -1c
.RI "typedef \fBmediump_bvec1_t\fP \fBmediump_bvec1\fP"
.br
.ti -1c
.RI "typedef \fBlowp_bvec1_t\fP \fBlowp_bvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec1\fP \fBbvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_vec1\fP \fBvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec1\fP \fBivec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec1\fP \fBuvec1\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBprecision\fP { \fBhighp\fP, \fBmediump\fP, \fBlowp\fP, \fBdefaultp\fP = highp }"
.br
.ti -1c
.RI "enum \fBprofile\fP { \fBnice\fP, \fBfast\fP, \fBsimd\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBabs\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsign\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfloor\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtrunc\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBround\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroundEven\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBceil\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfract\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmod\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmod\fP (genType const &x, typename genType::value_type const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmodf\fP (genType const &x, genType &i)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmin\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmin\fP (genType const &x, typename genType::value_type const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmax\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmax\fP (genType const &x, typename genType::value_type const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBclamp\fP (genType const &x, genType const &minVal, genType const &maxVal)"
.br
.ti -1c
.RI "template<typename genType , precision P> GLM_FUNC_DECL genType \fBclamp\fP (genType const &x, typename genType::value_type const &minVal, typename genType::value_type const &maxVal)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBmix\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< U, P > const &a)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBmix\fP (vecType< T, P > const &x, vecType< T, P > const &y, U const &a)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeT \fBmix\fP (genTypeT const &x, genTypeT const &y, genTypeU const &a)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBstep\fP (genType const &edge, genType const &x)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, typename T , precision P> GLM_FUNC_DECL vecType< T, P > \fBstep\fP (T const &edge, vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsmoothstep\fP (genType const &edge0, genType const &edge1, genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsmoothstep\fP (typename genType::value_type const &edge0, typename genType::value_type const &edge1, genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::bool_type \fBisnan\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::bool_type \fBisinf\fP (genType const &x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBfloatBitsToInt\fP (float const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_DECL vecType< int, P > \fBfloatBitsToInt\fP (vecType< float, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBfloatBitsToUint\fP (float const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_DECL vecType< \fBuint\fP, P > \fBfloatBitsToUint\fP (vecType< float, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBintBitsToFloat\fP (int const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_DECL vecType< float, P > \fBintBitsToFloat\fP (vecType< int, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBuintBitsToFloat\fP (\fBuint\fP const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_DECL vecType< float, P > \fBuintBitsToFloat\fP (vecType< \fBuint\fP, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfma\fP (genType const &a, genType const &b, genType const &c)"
.br
.ti -1c
.RI "template<typename genType , typename genIType > GLM_FUNC_DECL genType \fBfrexp\fP (genType const &x, genIType &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename genType , typename genIType > GLM_FUNC_DECL genType \fBldexp\fP (genType const &x, genIType const &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename genFIType > GLM_FUNC_QUALIFIER genFIType \fBabs\fP (genFIType const &x)"
.br
.ti -1c
.RI "template<typename genFIType > GLM_FUNC_QUALIFIER genFIType \fBsign\fP (genFIType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfloor\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtrunc\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBround\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroundEven\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBceil\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfract\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmod\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmodf\fP (genType const &x, genType &i)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBmodf\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > &i)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBmodf\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > &i)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBmodf\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< T, P > &i)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmin\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmax\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBclamp\fP (genType const &x, genType const &minVal, genType const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBclamp\fP (\fBdetail::tvec2\fP< T, P > const &x, T const &minVal, T const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBclamp\fP (\fBdetail::tvec3\fP< T, P > const &x, T const &minVal, T const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBclamp\fP (\fBdetail::tvec4\fP< T, P > const &x, T const &minVal, T const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBclamp\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > const &minVal, \fBdetail::tvec2\fP< T, P > const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBclamp\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &minVal, \fBdetail::tvec3\fP< T, P > const &maxVal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBclamp\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< T, P > const &minVal, \fBdetail::tvec4\fP< T, P > const &maxVal)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBmix\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< U, P > const &a)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBmix\fP (vecType< T, P > const &x, vecType< T, P > const &y, U const &a)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_QUALIFIER genTypeT \fBmix\fP (genTypeT const &x, genTypeT const &y, genTypeU const &a)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBstep\fP (genType const &edge, genType const &x)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, typename T , precision P> GLM_FUNC_QUALIFIER vecType< T, P > \fBstep\fP (T const &edge, vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsmoothstep\fP (genType const &edge0, genType const &edge1, genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBsmoothstep\fP (T const &edge0, T const &edge1, \fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBsmoothstep\fP (T const &edge0, T const &edge1, \fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBsmoothstep\fP (T const &edge0, T const &edge1, \fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBsmoothstep\fP (\fBdetail::tvec2\fP< T, P > const &edge0, \fBdetail::tvec2\fP< T, P > const &edge1, \fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBsmoothstep\fP (\fBdetail::tvec3\fP< T, P > const &edge0, \fBdetail::tvec3\fP< T, P > const &edge1, \fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBsmoothstep\fP (\fBdetail::tvec4\fP< T, P > const &edge0, \fBdetail::tvec4\fP< T, P > const &edge1, \fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisnan\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P >::bool_type \fBisnan\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P >::bool_type \fBisnan\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P >::bool_type \fBisnan\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisinf\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P >::bool_type \fBisinf\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P >::bool_type \fBisinf\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P >::bool_type \fBisinf\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_QUALIFIER vecType< int, P > \fBfloatBitsToInt\fP (vecType< float, P > const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_QUALIFIER vecType< \fBuint\fP, P > \fBfloatBitsToUint\fP (vecType< float, P > const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_QUALIFIER vecType< float, P > \fBintBitsToFloat\fP (vecType< int, P > const &v)"
.br
.ti -1c
.RI "template<template< typename, precision > class vecType, precision P> GLM_FUNC_QUALIFIER vecType< float, P > \fBuintBitsToFloat\fP (vecType< \fBuint\fP, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfma\fP (genType const &a, genType const &b, genType const &c)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfrexp\fP (genType const &x, int &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBfrexp\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< int, P > &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBfrexp\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< int, P > &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBfrexp\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< int, P > &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename genType , precision P> GLM_FUNC_QUALIFIER genType \fBldexp\fP (genType const &x, int const &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBldexp\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< int, P > const &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBldexp\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< int, P > const &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBldexp\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< int, P > const &\fBexp\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBpow\fP (genType const &base, genType const &exponent)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBexp\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlog\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBexp2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlog2\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBsqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBinversesqrt\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBexp\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlog\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBexp2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlog2\fP (genType x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBsqrt\fP (float x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBsqrt\fP (double x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBsqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBinversesqrt\fP (float const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBinversesqrt\fP (double const &x)"
.br
.ti -1c
.RI "template<template< class, precision > class vecType, typename T , precision P> GLM_FUNC_QUALIFIER vecType< T, P > \fBinversesqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBlength\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBdistance\fP (genType const &p0, genType const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBdot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBdot\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBnormalize\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfaceforward\fP (genType const &N, genType const &I, genType const &Nref)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBreflect\fP (genType const &I, genType const &N)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBrefract\fP (vecType< T, P > const &I, vecType< T, P > const &N, T const &eta)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlength\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength\fP (\fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBdistance\fP (genType const &p0, genType const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance\fP (\fBdetail::tvec2\fP< T, P > const &p0, \fBdetail::tvec2\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance\fP (\fBdetail::tvec3\fP< T, P > const &p0, \fBdetail::tvec3\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance\fP (\fBdetail::tvec4\fP< T, P > const &p0, \fBdetail::tvec4\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBdot\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBdot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBnormalize\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBnormalize\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBnormalize\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBnormalize\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfaceforward\fP (genType const &N, genType const &I, genType const &Nref)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBreflect\fP (genType const &I, genType const &N)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBrefract\fP (genType const &I, genType const &N, genType const &eta)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBrefract\fP (vecType< T, P > const &I, vecType< T, P > const &N, T const &eta)"
.br
.ti -1c
.RI "template<typename genUType > GLM_FUNC_DECL genUType \fBuaddCarry\fP (genUType const &x, genUType const &y, genUType &carry)"
.br
.ti -1c
.RI "template<typename genUType > GLM_FUNC_DECL genUType \fBusubBorrow\fP (genUType const &x, genUType const &y, genUType &borrow)"
.br
.ti -1c
.RI "template<typename genUType > GLM_FUNC_DECL void \fBumulExtended\fP (genUType const &x, genUType const &y, genUType &msb, genUType &lsb)"
.br
.ti -1c
.RI "template<typename genIType > GLM_FUNC_DECL void \fBimulExtended\fP (genIType const &x, genIType const &y, genIType &msb, genIType &lsb)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldExtract\fP (genIUType const &Value, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldInsert\fP (genIUType const &Base, genIUType const &Insert, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldReverse\fP (genIUType const &Value)"
.br
.ti -1c
.RI "template<typename T , template< typename > class genIUType> GLM_FUNC_DECL genIUType< T >::signed_type \fBbitCount\fP (genIUType< T > const &Value)"
.br
.ti -1c
.RI "template<typename T , template< typename > class genIUType> GLM_FUNC_DECL genIUType< T >::signed_type \fBfindLSB\fP (genIUType< T > const &Value)"
.br
.ti -1c
.RI "template<typename T , template< typename > class genIUType> GLM_FUNC_DECL genIUType< T >::signed_type \fBfindMSB\fP (genIUType< T > const &Value)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuint\fP \fBuaddCarry\fP (\fBuint\fP const &x, \fBuint\fP const &y, \fBuint\fP &Carry)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec2\fP \fBuaddCarry\fP (\fBuvec2\fP const &x, \fBuvec2\fP const &y, \fBuvec2\fP &Carry)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec3\fP \fBuaddCarry\fP (\fBuvec3\fP const &x, \fBuvec3\fP const &y, \fBuvec3\fP &Carry)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec4\fP \fBuaddCarry\fP (\fBuvec4\fP const &x, \fBuvec4\fP const &y, \fBuvec4\fP &Carry)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuint\fP \fBusubBorrow\fP (\fBuint\fP const &x, \fBuint\fP const &y, \fBuint\fP &Borrow)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec2\fP \fBusubBorrow\fP (\fBuvec2\fP const &x, \fBuvec2\fP const &y, \fBuvec2\fP &Borrow)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec3\fP \fBusubBorrow\fP (\fBuvec3\fP const &x, \fBuvec3\fP const &y, \fBuvec3\fP &Borrow)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER \fBuvec4\fP \fBusubBorrow\fP (\fBuvec4\fP const &x, \fBuvec4\fP const &y, \fBuvec4\fP &Borrow)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBumulExtended\fP (\fBuint\fP const &x, \fBuint\fP const &y, \fBuint\fP &msb, \fBuint\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBumulExtended\fP (\fBuvec2\fP const &x, \fBuvec2\fP const &y, \fBuvec2\fP &msb, \fBuvec2\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBumulExtended\fP (\fBuvec3\fP const &x, \fBuvec3\fP const &y, \fBuvec3\fP &msb, \fBuvec3\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBumulExtended\fP (\fBuvec4\fP const &x, \fBuvec4\fP const &y, \fBuvec4\fP &msb, \fBuvec4\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBimulExtended\fP (int const &x, int const &y, int &msb, int &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBimulExtended\fP (\fBivec2\fP const &x, \fBivec2\fP const &y, \fBivec2\fP &msb, \fBivec2\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBimulExtended\fP (\fBivec3\fP const &x, \fBivec3\fP const &y, \fBivec3\fP &msb, \fBivec3\fP &lsb)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER void \fBimulExtended\fP (\fBivec4\fP const &x, \fBivec4\fP const &y, \fBivec4\fP &msb, \fBivec4\fP &lsb)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBbitfieldExtract\fP (genIUType const &Value, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBbitfieldExtract\fP (\fBdetail::tvec2\fP< T, P > const &Value, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBbitfieldExtract\fP (\fBdetail::tvec3\fP< T, P > const &Value, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBbitfieldExtract\fP (\fBdetail::tvec4\fP< T, P > const &Value, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBbitfieldInsert\fP (genIUType const &Base, genIUType const &Insert, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBbitfieldInsert\fP (\fBdetail::tvec2\fP< T, P > const &Base, \fBdetail::tvec2\fP< T, P > const &Insert, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBbitfieldInsert\fP (\fBdetail::tvec3\fP< T, P > const &Base, \fBdetail::tvec3\fP< T, P > const &Insert, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBbitfieldInsert\fP (\fBdetail::tvec4\fP< T, P > const &Base, \fBdetail::tvec4\fP< T, P > const &Insert, int const &Offset, int const &Bits)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBbitfieldReverse\fP (genIUType const &Value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER int \fBbitCount\fP (genIUType const &Value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< int, P > \fBbitCount\fP (\fBdetail::tvec2\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< int, P > \fBbitCount\fP (\fBdetail::tvec3\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< int, P > \fBbitCount\fP (\fBdetail::tvec4\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER int \fBfindLSB\fP (genIUType const &Value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< int, P > \fBfindLSB\fP (\fBdetail::tvec2\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< int, P > \fBfindLSB\fP (\fBdetail::tvec3\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< int, P > \fBfindLSB\fP (\fBdetail::tvec4\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER int \fBfindMSB\fP (genIUType const &Value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< int, P > \fBfindMSB\fP (\fBdetail::tvec2\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< int, P > \fBfindMSB\fP (\fBdetail::tvec3\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< int, P > \fBfindMSB\fP (\fBdetail::tvec4\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL matType< T, P > \fBmatrixCompMult\fP (matType< T, P > const &x, matType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecTypeA, template< typename, precision > class vecTypeB> GLM_FUNC_DECL \fBdetail::outerProduct_trait\fP< T, P, vecTypeA, vecTypeB >::type \fBouterProduct\fP (vecTypeA< T, P > const &c, vecTypeB< T, P > const &r)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL T \fBdeterminant\fP (matType< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL matType< T, P > \fBinverse\fP (matType< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER matType< T, P > \fBmatrixCompMult\fP (matType< T, P > const &x, matType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecTypeA, template< typename, precision > class vecTypeB> GLM_FUNC_QUALIFIER \fBdetail::outerProduct_trait\fP< T, P, vecTypeA, vecTypeB >::type \fBouterProduct\fP (vecTypeA< T, P > const &c, vecTypeB< T, P > const &r)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER matType< T, P >::transpose_type \fBtranspose\fP (matType< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER T \fBdeterminant\fP (matType< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER matType< T, P > \fBinverse\fP (matType< T, P > const &m)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBnoise1\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL \fBdetail::tvec2\fP< typename genType::value_type, defaultp > \fBnoise2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL \fBdetail::tvec3\fP< typename genType::value_type, defaultp > \fBnoise3\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL \fBdetail::tvec4\fP< typename genType::value_type, defaultp > \fBnoise4\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBnoise1\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, defaultp > \fBnoise2\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, defaultp > \fBnoise3\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, defaultp > \fBnoise4\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnoise1\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnoise1\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnoise1\fP (\fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBnoise2\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBnoise2\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBnoise2\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBnoise3\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBnoise3\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBnoise3\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBnoise4\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBnoise4\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBnoise4\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpackUnorm2x16\fP (\fBvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpackSnorm2x16\fP (\fBvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpackUnorm4x8\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpackSnorm4x8\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec2\fP \fBunpackUnorm2x16\fP (\fBuint\fP const &p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec2\fP \fBunpackSnorm2x16\fP (\fBuint\fP const &p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackUnorm4x8\fP (\fBuint\fP const &p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackSnorm4x8\fP (\fBuint\fP const &p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL double \fBpackDouble2x32\fP (\fBuvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuvec2\fP \fBunpackDouble2x32\fP (double const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpackHalf2x16\fP (\fBvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec2\fP \fBunpackHalf2x16\fP (\fBuint\fP const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBradians\fP (genType const &\fBdegrees\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBdegrees\fP (genType const &\fBradians\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsin\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcos\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtan\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasin\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacos\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBatan\fP (genType const &y, genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBatan\fP (genType const &y_over_x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsinh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcosh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtanh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasinh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacosh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBatanh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBradians\fP (genType const &\fBdegrees\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBdegrees\fP (genType const &\fBradians\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsin\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcos\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtan\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasin\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacos\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBatan\fP (genType const &y, genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBatan\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsinh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcosh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtanh\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasinh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacosh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBatanh\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P >::bool_type \fBlessThanEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P >::bool_type \fBgreaterThan\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P >::bool_type \fBgreaterThanEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P >::bool_type \fBnotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBany\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBall\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBnot_\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBlessThan\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBlessThanEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBgreaterThan\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBgreaterThanEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBequal\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P >::bool_type \fBnotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBany\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBall\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBnot_\fP (vecType< bool, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBepsilon\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBzero\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBone\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBpi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBhalf_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBquarter_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBone_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtwo_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtwo_over_root_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBone_over_root_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_half_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_ln_four\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBe\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBeuler\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_three\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroot_five\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBln_ten\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBln_ln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBthird\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBtwo_thirds\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBgolden_ratio\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBepsilon\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBzero\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBone\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBhalf_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBquarter_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBone_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtwo_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtwo_over_root_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBone_over_root_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_half_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_ln_four\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBe\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBeuler\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_three\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroot_five\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBln_ten\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBln_ln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBthird\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBtwo_thirds\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBgolden_ratio\fP ()"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBepsilonEqual\fP (genType const &x, genType const &y, genType const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::boolType \fBepsilonNotEqual\fP (genType const &x, genType const &y, typename genType::value_type const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBepsilonNotEqual\fP (genType const &x, genType const &y, genType const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonEqual\fP (float const &x, float const &y, float const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonEqual\fP (double const &x, double const &y, double const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonNotEqual\fP (float const &x, float const &y, float const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonNotEqual\fP (double const &x, double const &y, double const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< T, P > const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonNotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonNotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< T, P > const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBepsilonEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBepsilonNotEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::row_type \fBrow\fP (genType const &m, length_t const &index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBrow\fP (genType const &m, length_t const &index, typename genType::row_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::col_type \fBcolumn\fP (genType const &m, length_t const &index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcolumn\fP (genType const &m, length_t const &index, typename genType::col_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBrow\fP (genType const &m, length_t const &index, typename genType::row_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType::row_type \fBrow\fP (genType const &m, length_t const &index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcolumn\fP (genType const &m, length_t const &index, typename genType::col_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType::col_type \fBcolumn\fP (genType const &m, length_t const &index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBaffineInverse\fP (genType const &m)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBinverseTranspose\fP (genType const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBaffineInverse\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBaffineInverse\fP (\fBdetail::tmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBinverseTranspose\fP (\fBdetail::tmat2x2\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBinverseTranspose\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBinverseTranspose\fP (\fBdetail::tmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBtranslate\fP (\fBdetail::tmat4x4\fP< T, P > const &m, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBrotate\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBscale\fP (\fBdetail::tmat4x4\fP< T, P > const &m, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBortho\fP (T const &left, T const &right, T const &bottom, T const &top, T const &zNear, T const &zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBortho\fP (T const &left, T const &right, T const &bottom, T const &top)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBfrustum\fP (T const &left, T const &right, T const &bottom, T const &top, T const &near, T const &far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBperspective\fP (T const &fovy, T const &aspect, T const &near, T const &far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBperspectiveFov\fP (T const &fov, T const &width, T const &height, T const &near, T const &far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBinfinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T near, T ep)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBproject\fP (\fBdetail::tvec3\fP< T, P > const &obj, \fBdetail::tmat4x4\fP< T, P > const &model, \fBdetail::tmat4x4\fP< T, P > const &\fBproj\fP, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBunProject\fP (\fBdetail::tvec3\fP< T, P > const &win, \fBdetail::tmat4x4\fP< T, P > const &model, \fBdetail::tmat4x4\fP< T, P > const &\fBproj\fP, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P, typename U > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBpickMatrix\fP (\fBdetail::tvec2\fP< T, P > const &center, \fBdetail::tvec2\fP< T, P > const &delta, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBlookAt\fP (\fBdetail::tvec3\fP< T, P > const &eye, \fBdetail::tvec3\fP< T, P > const &center, \fBdetail::tvec3\fP< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBtranslate\fP (\fBdetail::tmat4x4\fP< T, P > const &m, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrotate\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrotate_slow\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBscale\fP (\fBdetail::tmat4x4\fP< T, P > const &m, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBscale_slow\fP (\fBdetail::tmat4x4\fP< T, P > const &m, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBortho\fP (T const &left, T const &right, T const &bottom, T const &top, T const &zNear, T const &zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBortho\fP (T const &left, T const &right, T const &bottom, T const &top)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBfrustum\fP (T const &left, T const &right, T const &bottom, T const &top, T const &nearVal, T const &farVal)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBperspective\fP (T const &fovy, T const &aspect, T const &zNear, T const &zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBperspectiveFov\fP (T const &fov, T const &width, T const &height, T const &zNear, T const &zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBinfinitePerspective\fP (T fovy, T aspect, T zNear)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T zNear, T ep)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T zNear)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBproject\fP (\fBdetail::tvec3\fP< T, P > const &obj, \fBdetail::tmat4x4\fP< T, P > const &model, \fBdetail::tmat4x4\fP< T, P > const &\fBproj\fP, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBunProject\fP (\fBdetail::tvec3\fP< T, P > const &win, \fBdetail::tmat4x4\fP< T, P > const &model, \fBdetail::tmat4x4\fP< T, P > const &\fBproj\fP, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P, typename U > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBpickMatrix\fP (\fBdetail::tvec2\fP< T, P > const &center, \fBdetail::tvec2\fP< T, P > const &delta, \fBdetail::tvec4\fP< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBlookAt\fP (\fBdetail::tvec3\fP< T, P > const &eye, \fBdetail::tvec3\fP< T, P > const &center, \fBdetail::tvec3\fP< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBperlin\fP (vecType< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBperlin\fP (vecType< T, P > const &p, vecType< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBsimplex\fP (vecType< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec2\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec3\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec4\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec2\fP< T, P > const &Position, \fBdetail::tvec2\fP< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec3\fP< T, P > const &Position, \fBdetail::tvec3\fP< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (\fBdetail::tvec4\fP< T, P > const &Position, \fBdetail::tvec4\fP< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (\fBglm::detail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (\fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint8\fP \fBpackUnorm1x8\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackUnorm1x8\fP (\fBuint8\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackUnorm2x8\fP (\fBvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec2\fP \fBunpackUnorm2x8\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint8\fP \fBpackSnorm1x8\fP (float s)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackSnorm1x8\fP (\fBuint8\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackSnorm2x8\fP (\fBvec2\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec2\fP \fBunpackSnorm2x8\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackUnorm1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackUnorm1x16\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackUnorm4x16\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackUnorm4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackSnorm1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackSnorm1x16\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackSnorm4x16\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackSnorm4x16\fP (\fBuint64\fP const &p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackHalf1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackHalf1x16\fP (\fBuint16\fP v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackHalf4x16\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackHalf4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackI3x10_1x2\fP (\fBivec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBivec4\fP \fBunpackI3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackU3x10_1x2\fP (\fBuvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuvec4\fP \fBunpackU3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackSnorm3x10_1x2\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackSnorm3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackUnorm3x10_1x2\fP (\fBvec4\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec4\fP \fBunpackUnorm3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackF2x11_1x10\fP (\fBvec3\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBvec3\fP \fBunpackF2x11_1x10\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBvec4\fP \fBunpackSnorm4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlength\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBnormalize\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class quatType> GLM_FUNC_DECL T \fBdot\fP (quatType< T, P > const &x, quatType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBmix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBlerp\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBslerp\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.RI "Returns the slurp interpolation between two quaternions\&. "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBconjugate\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBinverse\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBeulerAngles\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBroll\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBpitch\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fByaw\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBmat3_cast\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBmat4_cast\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBquat_cast\fP (\fBdetail::tmat3x3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBquat_cast\fP (\fBdetail::tmat4x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBangle\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBaxis\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBangleAxis\fP (T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBlessThan\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBlessThanEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBgreaterThan\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBgreaterThanEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBequal\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBnotEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBconjugate\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBinverse\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBnormalize\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBcross\fP (\fBdetail::tquat\fP< T, P > const &q1, \fBdetail::tquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBmix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBlerp\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBslerp\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBeulerAngles\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBroll\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBpitch\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fByaw\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBmat3_cast\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBmat4_cast\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBquat_cast\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBquat_cast\fP (\fBdetail::tmat4x4\fP< T, P > const &m4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBangle\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBaxis\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBangleAxis\fP (T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBlessThan\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBlessThanEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBgreaterThan\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBgreaterThanEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBequal\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBnotEqual\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlinearRand\fP (genType const &Min, genType const &Max)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBgaussRand\fP (genType const &Mean, genType const &Deviation)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec2\fP< T, defaultp > \fBcircularRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec3\fP< T, defaultp > \fBsphericalRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec2\fP< T, defaultp > \fBdiskRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec3\fP< T, defaultp > \fBballRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlinearRand\fP (genType const &Min, genType const &Max)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBgaussRand\fP (genType const &Mean, genType const &Deviation)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, defaultp > \fBdiskRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, defaultp > \fBballRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, defaultp > \fBcircularRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, defaultp > \fBsphericalRand\fP (T const &Radius)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsec\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcsc\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcot\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasec\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacsc\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacot\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsech\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcsch\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcoth\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasech\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacsch\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacoth\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsec\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcsc\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcot\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasec\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacsc\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacot\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsech\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcsch\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcoth\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasech\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacsch\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacoth\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type const  * \fBvalue_ptr\fP (genType const &vec)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec2\fP< T, defaultp > \fBmake_vec2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec3\fP< T, defaultp > \fBmake_vec3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tvec4\fP< T, defaultp > \fBmake_vec4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, defaultp > \fBmake_mat2x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat2x3\fP< T, defaultp > \fBmake_mat2x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat2x4\fP< T, defaultp > \fBmake_mat2x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat3x2\fP< T, defaultp > \fBmake_mat3x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, defaultp > \fBmake_mat3x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat3x4\fP< T, defaultp > \fBmake_mat3x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x2\fP< T, defaultp > \fBmake_mat4x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x3\fP< T, defaultp > \fBmake_mat4x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBmake_mat4x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, defaultp > \fBmake_mat2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, defaultp > \fBmake_mat3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBmake_mat4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tquat\fP< T, defaultp > \fBmake_quat\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tvec2\fP< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tvec2\fP< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tvec3\fP< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tvec3\fP< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tvec4\fP< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tvec4\fP< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat2x2\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat2x2\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat3x3\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat3x3\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat4x4\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat4x4\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat2x3\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat2x3\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat3x2\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat3x2\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat2x4\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat2x4\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat4x2\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat4x2\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat3x4\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat3x4\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tmat4x3\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tmat4x3\fP< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const  * \fBvalue_ptr\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBdetail::tquat\fP< T, P > &q)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, defaultp > \fBmake_vec2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, defaultp > \fBmake_vec3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, defaultp > \fBmake_vec4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, defaultp > \fBmake_mat2x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat2x3\fP< T, defaultp > \fBmake_mat2x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat2x4\fP< T, defaultp > \fBmake_mat2x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat3x2\fP< T, defaultp > \fBmake_mat3x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, defaultp > \fBmake_mat3x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat3x4\fP< T, defaultp > \fBmake_mat3x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x2\fP< T, defaultp > \fBmake_mat4x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x3\fP< T, defaultp > \fBmake_mat4x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBmake_mat4x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, defaultp > \fBmake_mat2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, defaultp > \fBmake_mat3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBmake_mat4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, defaultp > \fBmake_quat\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBnext_float\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBprev_float\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBnext_float\fP (genType const &x, \fBuint\fP const &Distance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBprev_float\fP (genType const &x, \fBuint\fP const &Distance)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBuint\fP \fBfloat_distance\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_DECL vecType< \fBuint\fP > \fBfloat_distance\fP (vecType< T > const &x, vecType< T > const &y)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER float \fBnext_float\fP (float const &x)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER double \fBnext_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBnext_float\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBprev_float\fP (float const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBprev_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBprev_float\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBnext_float\fP (T const &x, \fBuint\fP const &ulps)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBnext_float\fP (vecType< T, P > const &x, vecType< \fBuint\fP, P > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBprev_float\fP (T const &x, \fBuint\fP const &ulps)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBprev_float\fP (vecType< T, P > const &x, vecType< \fBuint\fP, P > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBuint\fP \fBfloat_distance\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< \fBuint\fP, P > \fBfloat_distance\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMin\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMin\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b, const genTypeT &z, const genTypeU &c)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMin\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b, const genTypeT &z, const genTypeU &c, const genTypeT &w, const genTypeU &d)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMax\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMax\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b, const genTypeT &z, const genTypeU &c)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeU \fBassociatedMax\fP (const genTypeT &x, const genTypeU &a, const genTypeT &y, const genTypeU &b, const genTypeT &z, const genTypeU &c, const genTypeT &w, const genTypeU &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec2\fP< U, P > &a, T y, const \fBdetail::tvec2\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec3\fP< U, P > &a, T y, const \fBdetail::tvec3\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec4\fP< U, P > &a, T y, const \fBdetail::tvec4\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (\fBdetail::tvec2\fP< T, P > const &x, U a, \fBdetail::tvec2\fP< T, P > const &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec3\fP< T, P > &x, U a, const \fBdetail::tvec3\fP< T, P > &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec4\fP< T, P > &x, U a, const \fBdetail::tvec4\fP< T, P > &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b, const \fBdetail::tvec2\fP< T, P > &z, const \fBdetail::tvec2\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b, const \fBdetail::tvec3\fP< T, P > &z, const \fBdetail::tvec3\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b, const \fBdetail::tvec4\fP< T, P > &z, const \fBdetail::tvec4\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b, const \fBdetail::tvec2\fP< T, P > &z, const \fBdetail::tvec2\fP< U, P > &c, const \fBdetail::tvec2\fP< T, P > &w, const \fBdetail::tvec2\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b, const \fBdetail::tvec3\fP< T, P > &z, const \fBdetail::tvec3\fP< U, P > &c, const \fBdetail::tvec3\fP< T, P > &w, const \fBdetail::tvec3\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b, const \fBdetail::tvec4\fP< T, P > &z, const \fBdetail::tvec4\fP< U, P > &c, const \fBdetail::tvec4\fP< T, P > &w, const \fBdetail::tvec4\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec2\fP< U, P > &a, T y, const \fBdetail::tvec2\fP< U, P > &b, T z, const \fBdetail::tvec2\fP< U, P > &c, T w, const \fBdetail::tvec2\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec3\fP< U, P > &a, T y, const \fBdetail::tvec3\fP< U, P > &b, T z, const \fBdetail::tvec3\fP< U, P > &c, T w, const \fBdetail::tvec3\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (T x, const \fBdetail::tvec4\fP< U, P > &a, T y, const \fBdetail::tvec4\fP< U, P > &b, T z, const \fBdetail::tvec4\fP< U, P > &c, T w, const \fBdetail::tvec4\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec2\fP< T, P > &x, U a, const \fBdetail::tvec2\fP< T, P > &y, U b, const \fBdetail::tvec2\fP< T, P > &z, U c, const \fBdetail::tvec2\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec3\fP< T, P > &x, U a, const \fBdetail::tvec3\fP< T, P > &y, U b, const \fBdetail::tvec3\fP< T, P > &z, U c, const \fBdetail::tvec3\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMin\fP (const \fBdetail::tvec4\fP< T, P > &x, U a, const \fBdetail::tvec4\fP< T, P > &y, U b, const \fBdetail::tvec4\fP< T, P > &z, U c, const \fBdetail::tvec4\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec2\fP< U, P > &a, T y, const \fBdetail::tvec2\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec3\fP< U, P > &a, T y, const \fBdetail::tvec3\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec4\fP< U, P > &a, T y, const \fBdetail::tvec4\fP< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, U a, const \fBdetail::tvec2\fP< T, P > &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, U a, const \fBdetail::tvec3\fP< T, P > &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, U a, const \fBdetail::tvec4\fP< T, P > &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b, const \fBdetail::tvec2\fP< T, P > &z, const \fBdetail::tvec2\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b, const \fBdetail::tvec3\fP< T, P > &z, const \fBdetail::tvec3\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b, const \fBdetail::tvec4\fP< T, P > &z, const \fBdetail::tvec4\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec2\fP< U, P > &a, T y, const \fBdetail::tvec2\fP< U, P > &b, T z, const \fBdetail::tvec2\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec3\fP< U, P > &a, T y, const \fBdetail::tvec3\fP< U, P > &b, T z, const \fBdetail::tvec3\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec4\fP< U, P > &a, T y, const \fBdetail::tvec4\fP< U, P > &b, T z, const \fBdetail::tvec4\fP< U, P > &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, U a, const \fBdetail::tvec2\fP< T, P > &y, U b, const \fBdetail::tvec2\fP< T, P > &z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, U a, const \fBdetail::tvec3\fP< T, P > &y, U b, const \fBdetail::tvec3\fP< T, P > &z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, U a, const \fBdetail::tvec4\fP< T, P > &y, U b, const \fBdetail::tvec4\fP< T, P > &z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< U, P > &a, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< U, P > &b, const \fBdetail::tvec2\fP< T, P > &z, const \fBdetail::tvec2\fP< U, P > &c, const \fBdetail::tvec2\fP< T, P > &w, const \fBdetail::tvec2\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< U, P > &a, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< U, P > &b, const \fBdetail::tvec3\fP< T, P > &z, const \fBdetail::tvec3\fP< U, P > &c, const \fBdetail::tvec3\fP< T, P > &w, const \fBdetail::tvec3\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< U, P > &a, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< U, P > &b, const \fBdetail::tvec4\fP< T, P > &z, const \fBdetail::tvec4\fP< U, P > &c, const \fBdetail::tvec4\fP< T, P > &w, const \fBdetail::tvec4\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec2\fP< U, P > &a, T y, const \fBdetail::tvec2\fP< U, P > &b, T z, const \fBdetail::tvec2\fP< U, P > &c, T w, const \fBdetail::tvec2\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec3\fP< U, P > &a, T y, const \fBdetail::tvec3\fP< U, P > &b, T z, const \fBdetail::tvec3\fP< U, P > &c, T w, const \fBdetail::tvec3\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (T x, const \fBdetail::tvec4\fP< U, P > &a, T y, const \fBdetail::tvec4\fP< U, P > &b, T z, const \fBdetail::tvec4\fP< U, P > &c, T w, const \fBdetail::tvec4\fP< U, P > &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec2\fP< T, P > &x, U a, const \fBdetail::tvec2\fP< T, P > &y, U b, const \fBdetail::tvec2\fP< T, P > &z, U c, const \fBdetail::tvec2\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec3\fP< T, P > &x, U a, const \fBdetail::tvec3\fP< T, P > &y, U b, const \fBdetail::tvec3\fP< T, P > &z, U c, const \fBdetail::tvec3\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< U, P > \fBassociatedMax\fP (const \fBdetail::tvec4\fP< T, P > &x, U a, const \fBdetail::tvec4\fP< T, P > &y, U b, const \fBdetail::tvec4\fP< T, P > &z, U c, const \fBdetail::tvec4\fP< T, P > &w, U d)"
.br
.ti -1c
.RI "template<typename genIType > GLM_FUNC_DECL genIType \fBmask\fP (genIType const &count)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBhighestBitValue\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBisPowerOfTwo\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBpowerOfTwoAbove\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBpowerOfTwoBelow\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBpowerOfTwoNearest\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_DEPRECATED GLM_FUNC_DECL genType \fBbitRevert\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBbitRotateRight\fP (genType const &In, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBbitRotateLeft\fP (genType const &In, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBfillBitfieldWithOne\fP (genIUType const &Value, int const &FromBit, int const &ToBit)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBfillBitfieldWithZero\fP (genIUType const &Value, int const &FromBit, int const &ToBit)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint16\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y, \fBint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y, \fBuint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z, \fBint8\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z, \fBuint8\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z, \fBint16\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z, \fBuint16\fP w)"
.br
.ti -1c
.RI "template<typename genIType > GLM_FUNC_QUALIFIER genIType \fBmask\fP (genIType const &count)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBhighestBitValue\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< int, P > \fBhighestBitValue\fP (\fBdetail::tvec2\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< int, P > \fBhighestBitValue\fP (\fBdetail::tvec3\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< int, P > \fBhighestBitValue\fP (\fBdetail::tvec4\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisPowerOfTwo\fP (genType const &Value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< bool, P > \fBisPowerOfTwo\fP (\fBdetail::tvec2\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< bool, P > \fBisPowerOfTwo\fP (\fBdetail::tvec3\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBisPowerOfTwo\fP (\fBdetail::tvec4\fP< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoAbove\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoBelow\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoNearest\fP (genType const &value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBbitRevert\fP (genType const &In)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBbitRotateRight\fP (genType const &In, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBbitRotateRight\fP (\fBdetail::tvec2\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBbitRotateRight\fP (\fBdetail::tvec3\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBbitRotateRight\fP (\fBdetail::tvec4\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBbitRotateLeft\fP (genType const &In, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBbitRotateLeft\fP (\fBdetail::tvec2\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBbitRotateLeft\fP (\fBdetail::tvec3\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBbitRotateLeft\fP (\fBdetail::tvec4\fP< T, P > const &Value, std::size_t Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBfillBitfieldWithOne\fP (genIUType const &Value, int const &FromBit, int const &ToBit)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBfillBitfieldWithZero\fP (genIUType const &Value, int const &FromBit, int const &ToBit)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBclosestPointOnLine\fP (\fBdetail::tvec3\fP< T, P > const &point, \fBdetail::tvec3\fP< T, P > const &a, \fBdetail::tvec3\fP< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBclosestPointOnLine\fP (\fBdetail::tvec3\fP< T, P > const &point, \fBdetail::tvec3\fP< T, P > const &a, \fBdetail::tvec3\fP< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrgbColor\fP (\fBdetail::tvec3\fP< T, P > const &hsvValue)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBhsvColor\fP (\fBdetail::tvec3\fP< T, P > const &rgbValue)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBsaturation\fP (T const s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBsaturation\fP (T const s, \fBdetail::tvec3\fP< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBsaturation\fP (T const s, \fBdetail::tvec4\fP< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBluminosity\fP (\fBdetail::tvec3\fP< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrgbColor\fP (const \fBdetail::tvec3\fP< T, P > &\fBhsvColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBhsvColor\fP (const \fBdetail::tvec3\fP< T, P > &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBsaturation\fP (T const s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBsaturation\fP (const T s, const \fBdetail::tvec3\fP< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBsaturation\fP (const T s, const \fBdetail::tvec4\fP< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBluminosity\fP (const \fBdetail::tvec3\fP< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrgb2YCoCg\fP (\fBdetail::tvec3\fP< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBYCoCg2rgb\fP (\fBdetail::tvec3\fP< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrgb2YCoCgR\fP (\fBdetail::tvec3\fP< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBYCoCgR2rgb\fP (\fBdetail::tvec3\fP< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrgb2YCoCg\fP (\fBdetail::tvec3\fP< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrgb2YCoCgR\fP (\fBdetail::tvec3\fP< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBYCoCg2rgb\fP (\fBdetail::tvec3\fP< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBYCoCgR2rgb\fP (\fBdetail::tvec3\fP< T, P > const &YCoCgRColor)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBlerp\fP (T x, T y, T a)"
.br
.RI "Returns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBlerp\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< T, P > &y, T a)"
.br
.RI "Returns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBlerp\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< T, P > &y, T a)"
.br
.RI "Returns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBlerp\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< T, P > &y, T a)"
.br
.RI "Returns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBlerp\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< T, P > &y, const \fBdetail::tvec2\fP< T, P > &a)"
.br
.RI "Returns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBlerp\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< T, P > &y, const \fBdetail::tvec3\fP< T, P > &a)"
.br
.RI "Returns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBlerp\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< T, P > &y, const \fBdetail::tvec4\fP< T, P > &a)"
.br
.RI "Returns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBslerp\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.RI "Returns the slurp interpolation between two quaternions\&. "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsaturate\fP (T x)"
.br
.RI "Returns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBsaturate\fP (const \fBdetail::tvec2\fP< T, P > &x)"
.br
.RI "Returns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBsaturate\fP (const \fBdetail::tvec3\fP< T, P > &x)"
.br
.RI "Returns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBsaturate\fP (const \fBdetail::tvec4\fP< T, P > &x)"
.br
.RI "Returns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBatan2\fP (T x, T y)"
.br
.RI "Arc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBatan2\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< T, P > &y)"
.br
.RI "Arc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBatan2\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< T, P > &y)"
.br
.RI "Arc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBatan2\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< T, P > &y)"
.br
.RI "Arc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBisfinite\fP (genType const &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec2\fP< bool, P > \fBisfinite\fP (const \fBdetail::tvec2\fP< T, P > &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< bool, P > \fBisfinite\fP (const \fBdetail::tvec3\fP< T, P > &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBisfinite\fP (const \fBdetail::tvec4\fP< T, P > &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisfinite\fP (genType const &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< bool, P > \fBisfinite\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< bool, P > \fBisfinite\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBisfinite\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.RI "Test whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) "
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompAdd\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMul\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMin\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMax\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompAdd\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMul\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMin\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMax\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBnormalize\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBlerp\fP (\fBdetail::tdualquat\fP< T, P > const &x, \fBdetail::tdualquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBinverse\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x4\fP< T, P > \fBmat2x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x4\fP< T, P > \fBmat3x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBdualquat_cast\fP (\fBdetail::tmat2x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tdualquat\fP< T, P > \fBdualquat_cast\fP (\fBdetail::tmat3x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tdualquat\fP< T, P > \fBnormalize\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tdualquat\fP< T, P > \fBlerp\fP (\fBdetail::tdualquat\fP< T, P > const &x, \fBdetail::tdualquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tdualquat\fP< T, P > \fBinverse\fP (\fBdetail::tdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x4\fP< T, P > \fBmat2x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x4\fP< T, P > \fBmat3x4_cast\fP (\fBdetail::tdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tdualquat\fP< T, P > \fBdualquat_cast\fP (\fBdetail::tmat2x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tdualquat\fP< T, P > \fBdualquat_cast\fP (\fBdetail::tmat3x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleX\fP (T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleY\fP (T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZ\fP (T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleXY\fP (T const &angleX, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYX\fP (T const &angleY, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleXZ\fP (T const &angleX, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZX\fP (T const &\fBangle\fP, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYZ\fP (T const &angleY, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZY\fP (T const &angleZ, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYXZ\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, defaultp > \fByawPitchRoll\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, defaultp > \fBorientate2\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, defaultp > \fBorientate3\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBorientate3\fP (\fBdetail::tvec3\fP< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBorientate4\fP (\fBdetail::tvec3\fP< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleX\fP (T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleY\fP (T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZ\fP (T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleXY\fP (T const &angleX, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYX\fP (T const &angleY, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleXZ\fP (T const &angleX, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZX\fP (T const &angleZ, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYZ\fP (T const &angleY, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleZY\fP (T const &angleZ, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fBeulerAngleYXZ\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, defaultp > \fByawPitchRoll\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, defaultp > \fBorientate2\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, defaultp > \fBorientate3\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBorientate3\fP (\fBdetail::tvec3\fP< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBorientate4\fP (\fBdetail::tvec3\fP< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBextend\fP (genType const &Origin, genType const &Source, typename genType::value_type const Length)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBextend\fP (genType const &Origin, genType const &Source, genType const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBextend\fP (\fBdetail::tvec2\fP< T, P > const &Origin, \fBdetail::tvec2\fP< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBextend\fP (\fBdetail::tvec3\fP< T, P > const &Origin, \fBdetail::tvec3\fP< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBextend\fP (\fBdetail::tvec4\fP< T, P > const &Origin, \fBdetail::tvec4\fP< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmin\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmin\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmax\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmax\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmin\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmin\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmax\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmax\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastPow\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeT \fBfastPow\fP (genTypeT const &x, genTypeU const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastExp\fP (const T &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastLog\fP (const T &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastExp2\fP (const T &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastLog2\fP (const T &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastLn\fP (const T &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastPow\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastPow\fP (const T x, int y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBfastPow\fP (const \fBdetail::tvec2\fP< T, P > &x, const \fBdetail::tvec2\fP< int, P > &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBfastPow\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< int, P > &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBfastPow\fP (const \fBdetail::tvec4\fP< T, P > &x, const \fBdetail::tvec4\fP< int, P > &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastExp\fP (const T x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLog\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastExp2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLog2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastSqrt\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastInverseSqrt\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastInverseSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBfastLength\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBfastDistance\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastNormalize\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastSqrt\fP (genType const &x)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER float \fBfastInverseSqrt< float >\fP (float const &x)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER double \fBfastInverseSqrt< double >\fP (double const &x)"
.br
.ti -1c
.RI "template<template< class, precision > class vecType, typename T , precision P> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastInverseSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLength\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastLength\fP (\fBdetail::tvec2\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastLength\fP (\fBdetail::tvec3\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastLength\fP (\fBdetail::tvec4\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastDistance\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastDistance\fP (\fBdetail::tvec2\fP< valType, P > const &x, \fBdetail::tvec2\fP< valType, P > const &y)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastDistance\fP (\fBdetail::tvec3\fP< valType, P > const &x, \fBdetail::tvec3\fP< valType, P > const &y)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER valType \fBfastDistance\fP (\fBdetail::tvec4\fP< valType, P > const &x, \fBdetail::tvec4\fP< valType, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastNormalize\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< valType, P > \fBfastNormalize\fP (\fBdetail::tvec2\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< valType, P > \fBfastNormalize\fP (\fBdetail::tvec3\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< valType, P > \fBfastNormalize\fP (\fBdetail::tvec4\fP< valType, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastSin\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastCos\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastTan\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAsin\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAcos\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAtan\fP (const T &y, const T &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAtan\fP (const T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastSin\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastCos\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastTan\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAsin\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAcos\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAtan\fP (T const &y, T const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAtan\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBradialGradient\fP (\fBdetail::tvec2\fP< T, P > const &Center, T const &Radius, \fBdetail::tvec2\fP< T, P > const &Focal, \fBdetail::tvec2\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlinearGradient\fP (\fBdetail::tvec2\fP< T, P > const &Point0, \fBdetail::tvec2\fP< T, P > const &Point1, \fBdetail::tvec2\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBradialGradient\fP (\fBdetail::tvec2\fP< T, P > const &Center, T const &Radius, \fBdetail::tvec2\fP< T, P > const &Focal, \fBdetail::tvec2\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlinearGradient\fP (\fBdetail::tvec2\fP< T, P > const &Point0, \fBdetail::tvec2\fP< T, P > const &Point1, \fBdetail::tvec2\fP< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBrightHanded\fP (\fBdetail::tvec3\fP< T, P > const &tangent, \fBdetail::tvec3\fP< T, P > const &binormal, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBleftHanded\fP (\fBdetail::tvec3\fP< T, P > const &tangent, \fBdetail::tvec3\fP< T, P > const &binormal, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBrightHanded\fP (\fBdetail::tvec3\fP< T, P > const &tangent, \fBdetail::tvec3\fP< T, P > const &binormal, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBleftHanded\fP (\fBdetail::tvec3\fP< T, P > const &tangent, \fBdetail::tvec3\fP< T, P > const &binormal, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "GLM_DEPRECATED GLM_FUNC_DECL \fBdword\fP \fBuint10_10_10_2_cast\fP (\fBglm::vec4\fP const &v)"
.br
.RI "Deprecated, use packUnorm3x10_1x2 instead\&. "
.ti -1c
.RI "GLM_FUNC_DECL int \fBpow\fP (int x, int y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBsqrt\fP (int x)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBlog2\fP (genIUType x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL unsigned int \fBfloor_log2\fP (unsigned int x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBmod\fP (int x, int y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfactorial\fP (genType const &x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpow\fP (\fBuint\fP x, \fBuint\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBsqrt\fP (\fBuint\fP x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBmod\fP (\fBuint\fP x, \fBuint\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBnlz\fP (\fBuint\fP x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfactorial\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBfactorial\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBfactorial\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBfactorial\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRayPlane\fP (genType const &orig, genType const &dir, genType const &planeOrig, genType const &planeNormal, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRayTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &baryPosition)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectLineTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &position)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, typename genType::value_type const sphereRadiusSquered, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadius, genType &intersectionPosition, genType &intersectionNormal)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectLineSphere\fP (genType const &point0, genType const &point1, genType const &sphereCenter, typename genType::value_type sphereRadius, genType &intersectionPosition1, genType &intersectionNormal1, genType &intersectionPosition2=genType(), genType &intersectionNormal2=genType())"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRayPlane\fP (genType const &orig, genType const &dir, genType const &planeOrig, genType const &planeNormal, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRayTriangle\fP (genType const &orig, genType const &dir, genType const &v0, genType const &v1, genType const &v2, genType &baryPosition)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectLineTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &position)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadiusSquered, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadius, genType &intersectionPosition, genType &intersectionNormal)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectLineSphere\fP (genType const &point0, genType const &point1, genType const &sphereCenter, typename genType::value_type sphereRadius, genType &intersectionPoint1, genType &intersectionNormal1, genType &intersectionPoint2, genType &intersectionNormal2)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlog\fP (genType const &x, genType const &base)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlog\fP (genType const &x, genType const &base)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBmatrixCross3\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBmatrixCross4\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBmatrixCross3\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBmatrixCross4\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL void \fBaxisAngle\fP (\fBdetail::tmat4x4\fP< T, P > const &mat, \fBdetail::tvec3\fP< T, P > &\fBaxis\fP, T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBaxisAngleMatrix\fP (\fBdetail::tvec3\fP< T, P > const &\fBaxis\fP, T const \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBextractMatrixRotation\fP (\fBdetail::tmat4x4\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBinterpolate\fP (\fBdetail::tmat4x4\fP< T, P > const &m1, \fBdetail::tmat4x4\fP< T, P > const &m2, T const delta)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER void \fBaxisAngle\fP (\fBdetail::tmat4x4\fP< T, P > const &mat, \fBdetail::tvec3\fP< T, P > &\fBaxis\fP, T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBaxisAngleMatrix\fP (\fBdetail::tvec3\fP< T, P > const &\fBaxis\fP, T const \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBextractMatrixRotation\fP (\fBdetail::tmat4x4\fP< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBinterpolate\fP (\fBdetail::tmat4x4\fP< T, P > const &m1, \fBdetail::tmat4x4\fP< T, P > const &m2, T const delta)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, P > \fBrowMajor2\fP (\fBdetail::tvec2\fP< T, P > const &v1, \fBdetail::tvec2\fP< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, P > \fBrowMajor2\fP (\fBdetail::tmat2x2\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBrowMajor3\fP (\fBdetail::tvec3\fP< T, P > const &v1, \fBdetail::tvec3\fP< T, P > const &v2, \fBdetail::tvec3\fP< T, P > const &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBrowMajor3\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBrowMajor4\fP (\fBdetail::tvec4\fP< T, P > const &v1, \fBdetail::tvec4\fP< T, P > const &v2, \fBdetail::tvec4\fP< T, P > const &v3, \fBdetail::tvec4\fP< T, P > const &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBrowMajor4\fP (\fBdetail::tmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, P > \fBcolMajor2\fP (\fBdetail::tvec2\fP< T, P > const &v1, \fBdetail::tvec2\fP< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, P > \fBcolMajor2\fP (\fBdetail::tmat2x2\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBcolMajor3\fP (\fBdetail::tvec3\fP< T, P > const &v1, \fBdetail::tvec3\fP< T, P > const &v2, \fBdetail::tvec3\fP< T, P > const &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBcolMajor3\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBcolMajor4\fP (\fBdetail::tvec4\fP< T, P > const &v1, \fBdetail::tvec4\fP< T, P > const &v2, \fBdetail::tvec4\fP< T, P > const &v3, \fBdetail::tvec4\fP< T, P > const &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBcolMajor4\fP (\fBdetail::tmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBrowMajor2\fP (\fBdetail::tvec2\fP< T, P > const &v1, \fBdetail::tvec2\fP< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBrowMajor2\fP (const \fBdetail::tmat2x2\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBrowMajor3\fP (const \fBdetail::tvec3\fP< T, P > &v1, const \fBdetail::tvec3\fP< T, P > &v2, const \fBdetail::tvec3\fP< T, P > &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBrowMajor3\fP (const \fBdetail::tmat3x3\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrowMajor4\fP (const \fBdetail::tvec4\fP< T, P > &v1, const \fBdetail::tvec4\fP< T, P > &v2, const \fBdetail::tvec4\fP< T, P > &v3, const \fBdetail::tvec4\fP< T, P > &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrowMajor4\fP (const \fBdetail::tmat4x4\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBcolMajor2\fP (const \fBdetail::tvec2\fP< T, P > &v1, const \fBdetail::tvec2\fP< T, P > &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBcolMajor2\fP (const \fBdetail::tmat2x2\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBcolMajor3\fP (const \fBdetail::tvec3\fP< T, P > &v1, const \fBdetail::tvec3\fP< T, P > &v2, const \fBdetail::tvec3\fP< T, P > &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBcolMajor3\fP (const \fBdetail::tmat3x3\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBcolMajor4\fP (const \fBdetail::tvec4\fP< T, P > &v1, const \fBdetail::tvec4\fP< T, P > &v2, const \fBdetail::tvec4\fP< T, P > &v3, const \fBdetail::tvec4\fP< T, P > &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBcolMajor4\fP (const \fBdetail::tmat4x4\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x2\fP< T, P > \fBdiagonal2x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x3\fP< T, P > \fBdiagonal2x3\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat2x4\fP< T, P > \fBdiagonal2x4\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x2\fP< T, P > \fBdiagonal3x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBdiagonal3x3\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x4\fP< T, P > \fBdiagonal3x4\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x2\fP< T, P > \fBdiagonal4x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x3\fP< T, P > \fBdiagonal4x3\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBdiagonal4x4\fP (\fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x2\fP< T, P > \fBdiagonal2x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x3\fP< T, P > \fBdiagonal2x3\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat2x4\fP< T, P > \fBdiagonal2x4\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x2\fP< T, P > \fBdiagonal3x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBdiagonal3x3\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x4\fP< T, P > \fBdiagonal3x4\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBdiagonal4x4\fP (\fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x3\fP< T, P > \fBdiagonal4x3\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x2\fP< T, P > \fBdiagonal4x2\fP (\fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBisIdentity\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBisOrthogonal\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER bool \fBisIdentity\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (\fBdetail::tmat2x2\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER bool \fBisOrthogonal\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBtranslate\fP (\fBdetail::tmat3x3\fP< T, P > const &m, \fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBrotate\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBscale\fP (\fBdetail::tmat3x3\fP< T, P > const &m, \fBdetail::tvec2\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBshearX\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBshearY\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBmixedProduct\fP (\fBdetail::tvec3\fP< T, P > const &v1, \fBdetail::tvec3\fP< T, P > const &v2, \fBdetail::tvec3\fP< T, P > const &v3)"
.br
.RI "Mixed product of 3 vectors (from GLM_GTX_mixed_product extension) "
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBmixedProduct\fP (\fBdetail::tvec3\fP< T, P > const &v1, \fBdetail::tvec3\fP< T, P > const &v2, \fBdetail::tvec3\fP< T, P > const &v3)"
.br
.RI "Mixed product of 3 vectors (from GLM_GTX_mixed_product extension) "
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBhigherMultiple\fP (genType const &Source, genType const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlowerMultiple\fP (genType const &Source, genType const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBhigherMultiple\fP (genType const &Source, genType const &Multiple)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER float \fBhigherMultiple\fP (float const &Source, float const &Multiple)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER double \fBhigherMultiple\fP (double const &Source, double const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlowerMultiple\fP (genType const &Source, genType const &Multiple)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER float \fBlowerMultiple\fP (float const &Source, float const &Multiple)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER double \fBlowerMultiple\fP (double const &Source, double const &Multiple)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBlength2\fP (T const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBlength2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBdistance2\fP (T const &p0, T const &p1)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBdistance2\fP (genType const &p0, genType const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl1Norm\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl1Norm\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl2Norm\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl2Norm\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlxNorm\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlxNorm\fP (\fBdetail::tvec3\fP< T, P > const &x, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBlength2\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (\fBdetail::tvec2\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (\fBdetail::tvec3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (\fBdetail::tvec4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBdistance2\fP (T const &p0, T const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (\fBdetail::tvec2\fP< T, P > const &p0, \fBdetail::tvec2\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (\fBdetail::tvec3\fP< T, P > const &p0, \fBdetail::tvec3\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (\fBdetail::tvec4\fP< T, P > const &p0, \fBdetail::tvec4\fP< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl1Norm\fP (\fBdetail::tvec3\fP< T, P > const &a, \fBdetail::tvec3\fP< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl1Norm\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl2Norm\fP (\fBdetail::tvec3\fP< T, P > const &a, \fBdetail::tvec3\fP< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl2Norm\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlxNorm\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlxNorm\fP (\fBdetail::tvec3\fP< T, P > const &v, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBtriangleNormal\fP (\fBdetail::tvec3\fP< T, P > const &p1, \fBdetail::tvec3\fP< T, P > const &p2, \fBdetail::tvec3\fP< T, P > const &p3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBtriangleNormal\fP (\fBdetail::tvec3\fP< T, P > const &p1, \fBdetail::tvec3\fP< T, P > const &p2, \fBdetail::tvec3\fP< T, P > const &p3)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBnormalizeDot\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBfastNormalizeDot\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBnormalizeDot\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnormalizeDot\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnormalizeDot\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBnormalizeDot\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastNormalizeDot\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBfastNormalizeDot\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBfastNormalizeDot\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBfastNormalizeDot\fP (\fBdetail::tvec4\fP< T, P > const &x, \fBdetail::tvec4\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow3\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow4\fP (genType const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBpowOfTwo\fP (int x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< bool, P > \fBpowOfTwo\fP (\fBdetail::tvec2\fP< int, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< bool, P > \fBpowOfTwo\fP (\fBdetail::tvec3\fP< int, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBpowOfTwo\fP (\fBdetail::tvec4\fP< int, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBorthonormalize\fP (const \fBdetail::tmat3x3\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBorthonormalize\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< T, P > &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBorthonormalize\fP (const \fBdetail::tmat3x3\fP< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBorthonormalize\fP (const \fBdetail::tvec3\fP< T, P > &x, const \fBdetail::tvec3\fP< T, P > &y)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType \fBperp\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_QUALIFIER vecType \fBperp\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBpolar\fP (\fBdetail::tvec3\fP< T, P > const &\fBeuclidean\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBeuclidean\fP (\fBdetail::tvec2\fP< T, P > const &\fBpolar\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBpolar\fP (\fBdetail::tvec3\fP< T, P > const &\fBeuclidean\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBeuclidean\fP (\fBdetail::tvec2\fP< T, P > const &\fBpolar\fP)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType \fBproj\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_QUALIFIER vecType \fBproj\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tvec3\fP< T, P > const &v, \fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBsquad\fP (\fBdetail::tquat\fP< T, P > const &q1, \fBdetail::tquat\fP< T, P > const &q2, \fBdetail::tquat\fP< T, P > const &s1, \fBdetail::tquat\fP< T, P > const &s2, T const &h)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBintermediate\fP (\fBdetail::tquat\fP< T, P > const &prev, \fBdetail::tquat\fP< T, P > const &curr, \fBdetail::tquat\fP< T, P > const &next)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBexp\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBlog\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBpow\fP (\fBdetail::tquat\fP< T, P > const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBextractRealComponent\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBtoMat3\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBtoMat4\fP (\fBdetail::tquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBtoQuat\fP (\fBdetail::tmat3x3\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBtoQuat\fP (\fBdetail::tmat4x4\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBshortMix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBfastMix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBrotation\fP (\fBdetail::tvec3\fP< T, P > const &orig, \fBdetail::tvec3\fP< T, P > const &dest)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlength2\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tvec3\fP< T, P > const &v, \fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBcross\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBsquad\fP (\fBdetail::tquat\fP< T, P > const &q1, \fBdetail::tquat\fP< T, P > const &q2, \fBdetail::tquat\fP< T, P > const &s1, \fBdetail::tquat\fP< T, P > const &s2, T const &h)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBintermediate\fP (\fBdetail::tquat\fP< T, P > const &prev, \fBdetail::tquat\fP< T, P > const &curr, \fBdetail::tquat\fP< T, P > const &next)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBexp\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBlog\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBpow\fP (\fBdetail::tquat\fP< T, P > const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrotate\fP (\fBdetail::tquat\fP< T, P > const &q, \fBdetail::tvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBextractRealComponent\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (\fBdetail::tquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBshortMix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBfastMix\fP (\fBdetail::tquat\fP< T, P > const &x, \fBdetail::tquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBrotation\fP (\fBdetail::tvec3\fP< T, P > const &orig, \fBdetail::tvec3\fP< T, P > const &dest)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBrotateNormalizedAxis\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tquat\fP< T, P > \fBrotateNormalizedAxis\fP (\fBdetail::tquat\fP< T, P > const &q, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrotateNormalizedAxis\fP (\fBdetail::tmat4x4\fP< T, P > const &m, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tquat\fP< T, P > \fBrotateNormalizedAxis\fP (\fBdetail::tquat\fP< T, P > const &q, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec2\fP< T, P > \fBrotate\fP (\fBdetail::tvec2\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrotate\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBrotate\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrotateX\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrotateY\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< T, P > \fBrotateZ\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBrotateX\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBrotateY\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< T, P > \fBrotateZ\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBorientation\fP (\fBdetail::tvec3\fP< T, P > const &Normal, \fBdetail::tvec3\fP< T, P > const &Up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBrotate\fP (\fBdetail::tvec2\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrotate\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrotate\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP, \fBdetail::tvec3\fP< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrotateX\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrotateY\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrotateZ\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrotateX\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrotateY\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrotateZ\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBorientation\fP (\fBdetail::tvec3\fP< T, P > const &Normal, \fBdetail::tvec3\fP< T, P > const &Up)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBlessThan\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBlessThanEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBgreaterThan\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBgreaterThanEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBequal\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBnotEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBany\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBall\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBnot_\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBmat4\fP \fBmat4_cast\fP (detail::fmat4x4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBmatrixCompMult\fP (detail::fmat4x4SIMD const &x, detail::fmat4x4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBouterProduct\fP (detail::fvec4SIMD const &c, detail::fvec4SIMD const &r)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBtranspose\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdeterminant\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBquat\fP \fBquat_cast\fP (detail::fquatSIMD const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast_impl\fP (const T m0[], const T m1[], const T m2[])"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (\fBdetail::tmat4x4\fP< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (\fBdetail::tmat3x3\fP< T, P > const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBmat4SIMD_cast\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBmat4\fP \fBmat4_cast\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBlength\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBnormalize\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdot\fP (detail::fquatSIMD const &q1, detail::fquatSIMD const &q2)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBmix\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBlerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBslerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBfastMix\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBfastSlerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBconjugate\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBinverse\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBangleAxisSIMD\fP (float const &\fBangle\fP, \fBvec3\fP const &v)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBangleAxisSIMD\fP (float const &\fBangle\fP, float const &x, float const &y, float const &z)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER __m128 \fBfastSin\fP (__m128 x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBvec4\fP \fBvec4_cast\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBabs\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsign\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfloor\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBtrunc\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBround\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBceil\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfract\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmod\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmod\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmin\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmin\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmax\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmax\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBclamp\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &minVal, detail::fvec4SIMD const &maxVal)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBclamp\fP (detail::fvec4SIMD const &x, float const &minVal, float const &maxVal)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmix\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y, detail::fvec4SIMD const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBstep\fP (detail::fvec4SIMD const &edge, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBstep\fP (float const &edge, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsmoothstep\fP (detail::fvec4SIMD const &edge0, detail::fvec4SIMD const &edge1, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsmoothstep\fP (float const &edge0, float const &edge1, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfma\fP (detail::fvec4SIMD const &a, detail::fvec4SIMD const &b, detail::fvec4SIMD const &c)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBlength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBfastLength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBniceLength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBlength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastLength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBniceLength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdistance\fP (detail::fvec4SIMD const &p0, detail::fvec4SIMD const &p1)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBdistance4\fP (detail::fvec4SIMD const &p0, detail::fvec4SIMD const &p1)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdot\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBdot4\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBcross\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBnormalize\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastNormalize\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfaceforward\fP (detail::fvec4SIMD const &N, detail::fvec4SIMD const &I, detail::fvec4SIMD const &Nref)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBreflect\fP (detail::fvec4SIMD const &I, detail::fvec4SIMD const &N)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBrefract\fP (detail::fvec4SIMD const &I, detail::fvec4SIMD const &N, float const &eta)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBniceSqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastSqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBinversesqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastInversesqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcatmullRom\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBhermite\fP (genType const &v1, genType const &t1, genType const &v2, genType const &t2, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcubic\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcatmullRom\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBhermite\fP (genType const &v1, genType const &t1, genType const &v2, genType const &t2, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcubic\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL std::string \fBto_string\fP (genType const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER std::string \fBto_string\fP (float x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER std::string \fBto_string\fP (double x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER std::string \fBto_string\fP (int x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER std::string \fBto_string\fP (unsigned int x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec2\fP< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec3\fP< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec4\fP< bool, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec2\fP< float, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec3\fP< float, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec4\fP< float, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec2\fP< double, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec3\fP< double, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec4\fP< double, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec2\fP< int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec3\fP< int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec4\fP< int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec2\fP< unsigned int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec3\fP< unsigned int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tvec4\fP< unsigned int, P > const &v)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x2\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x3\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x4\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x2\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x3\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x4\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x2\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x3\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x4\fP< float, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x2\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x3\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat2x4\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x2\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x3\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat3x4\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x2\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x3\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_QUALIFIER std::string \fBto_string\fP (\fBdetail::tmat4x4\fP< double, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBtranslate\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBrotate\fP (T \fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBscale\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBtranslate\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBrotate\fP (T \fBangle\fP, \fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBscale\fP (\fBdetail::tvec3\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBshearX2D\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBshearY2D\fP (\fBdetail::tmat3x3\fP< T, P > const &m, T x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBshearX3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T y, T z)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBshearY3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T x, T z)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBshearZ3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T x, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat3x3\fP< T, P > \fBproj2D\fP (const \fBdetail::tmat3x3\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< T, P > \fBproj3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< valType, P > \fBscaleBias\fP (valType \fBscale\fP, valType bias)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_DECL \fBdetail::tmat4x4\fP< valType, P > \fBscaleBias\fP (\fBdetail::tmat4x4\fP< valType, P > const &m, valType \fBscale\fP, valType bias)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBshearX2D\fP (const \fBdetail::tmat3x3\fP< T, P > &m, T s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBshearY2D\fP (const \fBdetail::tmat3x3\fP< T, P > &m, T s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBshearX3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBshearY3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBshearZ3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBreflect2D\fP (const \fBdetail::tmat3x3\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBreflect3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat3x3\fP< T, P > \fBproj2D\fP (const \fBdetail::tmat3x3\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBproj3D\fP (const \fBdetail::tmat4x4\fP< T, P > &m, const \fBdetail::tvec3\fP< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBscaleBias\fP (T \fBscale\fP, T bias)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tmat4x4\fP< T, P > \fBscaleBias\fP (const \fBdetail::tmat4x4\fP< T, P > &m, T \fBscale\fP, T bias)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType::value_type \fBangle\fP (vecType const &x, vecType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBorientedAngle\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBorientedAngle\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y, \fBdetail::tvec3\fP< T, P > const &ref)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBangle\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBangle\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBorientedAngle\fP (\fBdetail::tvec2\fP< T, P > const &x, \fBdetail::tvec2\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBorientedAngle\fP (\fBdetail::tvec3\fP< T, P > const &x, \fBdetail::tvec3\fP< T, P > const &y, \fBdetail::tvec3\fP< T, P > const &ref)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareCollinear\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareOrthogonal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBisNormalized\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBisNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBisCompNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareOrthonormal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareCollinear\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareOrthogonal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBisNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBisCompNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< bool, P > \fBisCompNull\fP (\fBdetail::tvec2\fP< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< bool, P > \fBisCompNull\fP (\fBdetail::tvec3\fP< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< bool, P > \fBisCompNull\fP (\fBdetail::tvec4\fP< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareOrthonormal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBclamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBrepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmirrorRepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBclamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBclamp\fP (\fBdetail::tvec2\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBclamp\fP (\fBdetail::tvec3\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBclamp\fP (\fBdetail::tvec4\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBrepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBrepeat\fP (\fBdetail::tvec2\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBrepeat\fP (\fBdetail::tvec3\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBrepeat\fP (\fBdetail::tvec4\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType , precision P> GLM_FUNC_QUALIFIER genType \fBmirrorRepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec2\fP< T, P > \fBmirrorRepeat\fP (\fBdetail::tvec2\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec3\fP< T, P > \fBmirrorRepeat\fP (\fBdetail::tvec3\fP< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBdetail::tvec4\fP< T, P > \fBmirrorRepeat\fP (\fBdetail::tvec4\fP< T, P > const &Texcoord)"
.br
.in -1c
.SH "Detailed Description"
.PP 
OpenGL Mathematics (glm\&.g-truc\&.net)
.PP
Copyright (c) 2005 - 2014 G-Truc Creation (www\&.g-truc\&.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBhighp_bvec1\fP \fBglm::bvec1\fP"
1 component vector of boolean\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_dquat\fP \fBglm::dquat\fP"
Quaternion of default double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_bvec1_t\fP \fBglm::highp_bvec1\fP"
1 component vector of high precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<double, highp> \fBglm::highp_dquat\fP"
Quaternion of high double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_quat\fP \fBglm::highp_fquat\fP"
Quaternion of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_ivec1_t\fP \fBglm::highp_ivec1\fP"
1 component vector of high precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<float, highp> \fBglm::highp_quat\fP"
Quaternion of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_uvec1_t\fP \fBglm::highp_uvec1\fP"
1 component vector of high precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_ivec1\fP \fBglm::ivec1\fP"
1 component vector of signed integer numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBlowp_bvec1_t\fP \fBglm::lowp_bvec1\fP"
1 component vector of low precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<double, lowp> \fBglm::lowp_dquat\fP"
Quaternion of low double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBlowp_quat\fP \fBglm::lowp_fquat\fP"
Quaternion of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBlowp_ivec1_t\fP \fBglm::lowp_ivec1\fP"
1 component vector of low precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<float, lowp> \fBglm::lowp_quat\fP"
Quaternion of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBlowp_uvec1_t\fP \fBglm::lowp_uvec1\fP"
1 component vector of low precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBmediump_bvec1_t\fP \fBglm::mediump_bvec1\fP"
1 component vector of medium precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<double, mediump> \fBglm::mediump_dquat\fP"
Quaternion of medium double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBmediump_quat\fP \fBglm::mediump_fquat\fP"
Quaternion of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBmediump_ivec1_t\fP \fBglm::mediump_ivec1\fP"
1 component vector of medium precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBdetail::tquat\fP<float, mediump> \fBglm::mediump_quat\fP"
Quaternion of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBmediump_uvec1_t\fP \fBglm::mediump_uvec1\fP"
1 component vector of medium precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_uvec1\fP \fBglm::uvec1\fP"
1 component vector of unsigned integer numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_vec1\fP \fBglm::vec1\fP"
1 component vector of floating-point numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vec1\fP extension\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
