.TH "gtx_optimum_pow" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_optimum_pow \- Integer exponentiation of power functions\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::gtx::pow2\fP (const genType &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::gtx::pow3\fP (const genType &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::gtx::pow4\fP (const genType &x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL bool \fBglm::gtx::powOfTwo\fP (int num)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_DECL \fBdetail::tvec2\fP< bool, P > \fBglm::gtx::powOfTwo\fP (\fBdetail::tvec2\fP< int, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP< bool, P > \fBglm::gtx::powOfTwo\fP (\fBdetail::tvec3\fP< int, P > const &x)"
.br
.ti -1c
.RI "template<precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP< bool, P > \fBglm::gtx::powOfTwo\fP (\fBdetail::tvec4\fP< int, P > const &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Integer exponentiation of power functions\&. 

<\fBglm/gtx/optimum_pow\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename genType > GLM_FUNC_DECL genType glm::gtx::pow2 (const genType & x)"
Returns x raised to the power of 2\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<typename genType > GLM_FUNC_DECL genType glm::gtx::pow3 (const genType & x)"
Returns x raised to the power of 3\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<typename genType > GLM_FUNC_DECL genType glm::gtx::pow4 (const genType & x)"
Returns x raised to the power of 4\&. From GLM_GTX_optimum_pow extension\&. 
.SS "GLM_FUNC_DECL bool glm::gtx::powOfTwo (int num)"
Checks if the parameter is a power of 2 number\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<precision P> GLM_FUNC_DECL \fBdetail::tvec2\fP<bool, P> glm::gtx::powOfTwo (\fBdetail::tvec2\fP< int, P > const & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<precision P> GLM_FUNC_DECL \fBdetail::tvec3\fP<bool, P> glm::gtx::powOfTwo (\fBdetail::tvec3\fP< int, P > const & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SS "template<precision P> GLM_FUNC_DECL \fBdetail::tvec4\fP<bool, P> glm::gtx::powOfTwo (\fBdetail::tvec4\fP< int, P > const & x)"
Checks to determine if the parameter component are power of 2 numbers\&. From GLM_GTX_optimum_pow extension\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
