.TH "glm::detail::tvec4< T, P >" 3 "Tue Dec 18 2018" "IMAC run" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm::detail::tvec4< T, P >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBctor\fP { \fB_null\fP }"
.br
.ti -1c
.RI "typedef \fBtvec4\fP< T, P > \fBtype\fP"
.br
.ti -1c
.RI "typedef \fBtvec4\fP< bool, P > \fBbool_type\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef int \fBsize_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR length_t \fBlength\fP () const"
.br
.ti -1c
.RI "GLM_FUNC_DECL T & \fBoperator[]\fP (length_t i)"
.br
.ti -1c
.RI "GLM_FUNC_DECL T const  & \fBoperator[]\fP (length_t i) const"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP (\fBtype\fP const &v)"
.br
.ti -1c
.RI "template<precision Q> GLM_FUNC_DECL \fBtvec4\fP (\fBtvec4\fP< T, Q > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP (ctor)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP (T const &s)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP (T const &s0, T const &s1, T const &s2, T const &s3)"
.br
.ti -1c
.RI "template<typename A , typename B , typename C , typename D > GLM_FUNC_DECL \fBtvec4\fP (A const &x, B const &y, C const &z, D const &w)"
.br
.RI "Explicit converions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , typename C , precision Q> GLM_FUNC_DECL \fBtvec4\fP (\fBtvec2\fP< A, Q > const &v, B const &s1, C const &s2)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , typename C , precision Q> GLM_FUNC_DECL \fBtvec4\fP (A const &s1, \fBtvec2\fP< B, Q > const &v, C const &s2)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , typename C , precision Q> GLM_FUNC_DECL \fBtvec4\fP (A const &s1, B const &s2, \fBtvec2\fP< C, Q > const &v)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , precision Q> GLM_FUNC_DECL \fBtvec4\fP (\fBtvec3\fP< A, Q > const &v, B const &s)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , precision Q> GLM_FUNC_DECL \fBtvec4\fP (A const &s, \fBtvec3\fP< B, Q > const &v)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename A , typename B , precision Q> GLM_FUNC_DECL \fBtvec4\fP (\fBtvec2\fP< A, Q > const &v1, \fBtvec2\fP< B, Q > const &v2)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_DECL \fBtvec4\fP (\fBtvec4\fP< U, Q > const &v)"
.br
.RI "Explicit conversions (From section 5\&.4\&.1 Conversion and scalar constructors of GLSL 1\&.30\&.08 specification) "
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator=\fP (\fBtvec4\fP< T, P > const &v)"
.br
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator=\fP (\fBtvec4\fP< U, Q > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator+=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator+=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator\-=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator\-=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator*=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator*=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator/=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator/=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator++\fP ()"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP< T, P > \fBoperator++\fP (int)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtvec4\fP< T, P > \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator%=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator%=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator &=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator &=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator|=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator|=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator^=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator^=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator<<=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator<<=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator>>=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtvec4\fP< T, P > & \fBoperator>>=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (\fBtvec4\fP< T, Q > const &v)"
.br
.ti -1c
.RI "template<typename A, typename B, typename C, typename D> GLM_FUNC_QUALIFIER \fBtvec4\fP (A const &x, B const &y, C const &z, D const &w)"
.br
.ti -1c
.RI "template<typename U, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (\fBtvec4\fP< U, Q > const &v)"
.br
.ti -1c
.RI "template<typename A, typename B, typename C, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (\fBtvec2\fP< A, Q > const &v, B const &s1, C const &s2)"
.br
.ti -1c
.RI "template<typename A, typename B, typename C, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (A const &s1, \fBtvec2\fP< B, Q > const &v, C const &s2)"
.br
.ti -1c
.RI "template<typename A, typename B, typename C, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (A const &s1, B const &s2, \fBtvec2\fP< C, Q > const &v)"
.br
.ti -1c
.RI "template<typename A, typename B, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (\fBtvec3\fP< A, Q > const &v, B const &s)"
.br
.ti -1c
.RI "template<typename A, typename B, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (A const &s, \fBtvec3\fP< B, Q > const &v)"
.br
.ti -1c
.RI "template<typename A, typename B, precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP (\fBtvec2\fP< A, Q > const &v1, \fBtvec2\fP< B, Q > const &v2)"
.br
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator=\fP (\fBtvec4\fP< U, Q > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator+=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator+=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator\-=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator\-=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator*=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator*=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator/=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator/=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator%=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator%=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator|=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator|=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator^=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator^=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator<<=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator<<=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator>>=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtvec4\fP< T, P > & \fBoperator>>=\fP (\fBtvec4\fP< U, P > const &v)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   T \fBx\fP"
.br
.ti -1c
.RI "   T \fBr\fP"
.br
.ti -1c
.RI "   T \fBs\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   T \fBy\fP"
.br
.ti -1c
.RI "   T \fBg\fP"
.br
.ti -1c
.RI "   T \fBt\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   T \fBz\fP"
.br
.ti -1c
.RI "   T \fBb\fP"
.br
.ti -1c
.RI "   T \fBp\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   T \fBw\fP"
.br
.ti -1c
.RI "   T \fBa\fP"
.br
.ti -1c
.RI "   T \fBq\fP"
.br
.ti -1c
.RI "}; "
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for IMAC run from the source code\&.
